{"ast":null,"code":"'use strict';function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}import EventSubscription from\"./EventSubscription\";var EmitterSubscription=function(_EventSubscription){_inherits(EmitterSubscription,_EventSubscription);function EmitterSubscription(emitter,subscriber,listener,context){_classCallCheck(this,EmitterSubscription);var _this=_possibleConstructorReturn(this,_EventSubscription.call(this,subscriber));_this.emitter=emitter;_this.listener=listener;_this.context=context;return _this;}EmitterSubscription.prototype.remove=function remove(){this.emitter.removeSubscription(this);};return EmitterSubscription;}(EventSubscription);export default EmitterSubscription;","map":{"version":3,"sources":["C:/Users/arnol/code/entroprise/node_modules/react-web-gifted-chat/node_modules/react-native-web/dist/vendor/react-native/emitter/EmitterSubscription.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","EventSubscription","EmitterSubscription","_EventSubscription","emitter","subscriber","listener","context","_this","remove","removeSubscription"],"mappings":"AASA,aAEA,QAASA,CAAAA,eAAT,CAAyBC,QAAzB,CAAmCC,WAAnC,CAAgD,CAAE,GAAI,EAAED,QAAQ,WAAYC,CAAAA,WAAtB,CAAJ,CAAwC,CAAE,KAAM,IAAIC,CAAAA,SAAJ,CAAc,mCAAd,CAAN,CAA2D,CAAE,CAEzJ,QAASC,CAAAA,0BAAT,CAAoCC,IAApC,CAA0CC,IAA1C,CAAgD,CAAE,GAAI,CAACD,IAAL,CAAW,CAAE,KAAM,IAAIE,CAAAA,cAAJ,CAAmB,2DAAnB,CAAN,CAAwF,CAAC,MAAOD,CAAAA,IAAI,GAAK,MAAOA,CAAAA,IAAP,GAAgB,QAAhB,EAA4B,MAAOA,CAAAA,IAAP,GAAgB,UAAjD,CAAJ,CAAmEA,IAAnE,CAA0ED,IAAjF,CAAwF,CAEhP,QAASG,CAAAA,SAAT,CAAmBC,QAAnB,CAA6BC,UAA7B,CAAyC,CAAE,GAAI,MAAOA,CAAAA,UAAP,GAAsB,UAAtB,EAAoCA,UAAU,GAAK,IAAvD,CAA6D,CAAE,KAAM,IAAIP,CAAAA,SAAJ,CAAc,2DAA6D,MAAOO,CAAAA,UAAlF,CAAN,CAAsG,CAACD,QAAQ,CAACE,SAAT,CAAqBC,MAAM,CAACC,MAAP,CAAcH,UAAU,EAAIA,UAAU,CAACC,SAAvC,CAAkD,CAAEG,WAAW,CAAE,CAAEC,KAAK,CAAEN,QAAT,CAAmBO,UAAU,CAAE,KAA/B,CAAsCC,QAAQ,CAAE,IAAhD,CAAsDC,YAAY,CAAE,IAApE,CAAf,CAAlD,CAArB,CAAqK,GAAIR,UAAJ,CAAgBE,MAAM,CAACO,cAAP,CAAwBP,MAAM,CAACO,cAAP,CAAsBV,QAAtB,CAAgCC,UAAhC,CAAxB,CAAsED,QAAQ,CAACW,SAAT,CAAqBV,UAA3F,CAAwG,CAE9e,MAAOW,CAAAA,iBAAP,2BAKA,GAAIC,CAAAA,mBAAmB,CAAG,SAAUC,kBAAV,CAA8B,CACtDf,SAAS,CAACc,mBAAD,CAAsBC,kBAAtB,CAAT,CAYA,QAASD,CAAAA,mBAAT,CAA6BE,OAA7B,CAAsCC,UAAtC,CAAkDC,QAAlD,CAA4DC,OAA5D,CAAqE,CACnE3B,eAAe,CAAC,IAAD,CAAOsB,mBAAP,CAAf,CAEA,GAAIM,CAAAA,KAAK,CAAGxB,0BAA0B,CAAC,IAAD,CAAOmB,kBAAkB,CAACjB,IAAnB,CAAwB,IAAxB,CAA8BmB,UAA9B,CAAP,CAAtC,CAEAG,KAAK,CAACJ,OAAN,CAAgBA,OAAhB,CACAI,KAAK,CAACF,QAAN,CAAiBA,QAAjB,CACAE,KAAK,CAACD,OAAN,CAAgBA,OAAhB,CACA,MAAOC,CAAAA,KAAP,CACD,CAUDN,mBAAmB,CAACX,SAApB,CAA8BkB,MAA9B,CAAuC,QAASA,CAAAA,MAAT,EAAkB,CACvD,KAAKL,OAAL,CAAaM,kBAAb,CAAgC,IAAhC,EACD,CAFD,CAIA,MAAOR,CAAAA,mBAAP,CACD,CArCyB,CAqCxBD,iBArCwB,CAA1B,CAuCA,cAAeC,CAAAA,mBAAf","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule EmitterSubscription\n * \n */\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport EventSubscription from './EventSubscription';\n\n/**\n * EmitterSubscription represents a subscription with listener and context data.\n */\nvar EmitterSubscription = function (_EventSubscription) {\n  _inherits(EmitterSubscription, _EventSubscription);\n\n  /**\n   * @param {EventEmitter} emitter - The event emitter that registered this\n   *   subscription\n   * @param {EventSubscriptionVendor} subscriber - The subscriber that controls\n   *   this subscription\n   * @param {function} listener - Function to invoke when the specified event is\n   *   emitted\n   * @param {*} context - Optional context object to use when invoking the\n   *   listener\n   */\n  function EmitterSubscription(emitter, subscriber, listener, context) {\n    _classCallCheck(this, EmitterSubscription);\n\n    var _this = _possibleConstructorReturn(this, _EventSubscription.call(this, subscriber));\n\n    _this.emitter = emitter;\n    _this.listener = listener;\n    _this.context = context;\n    return _this;\n  }\n\n  /**\n   * Removes this subscription from the emitter that registered it.\n   * Note: we're overriding the `remove()` method of EventSubscription here\n   * but deliberately not calling `super.remove()` as the responsibility\n   * for removing the subscription lies with the EventEmitter.\n   */\n\n\n  EmitterSubscription.prototype.remove = function remove() {\n    this.emitter.removeSubscription(this);\n  };\n\n  return EmitterSubscription;\n}(EventSubscription);\n\nexport default EmitterSubscription;"]},"metadata":{},"sourceType":"module"}