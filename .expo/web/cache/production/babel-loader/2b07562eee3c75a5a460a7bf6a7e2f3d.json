{"ast":null,"code":"var accessibilityComponentTypeToRole={button:'button',none:'presentation'};var accessibilityTraitsToRole={adjustable:'slider',button:'button',header:'heading',image:'img',link:'link',none:'presentation',search:'search',summary:'region'};var propsToAriaRole=function propsToAriaRole(_ref){var accessibilityComponentType=_ref.accessibilityComponentType,accessibilityRole=_ref.accessibilityRole,accessibilityTraits=_ref.accessibilityTraits;if(accessibilityRole){return accessibilityRole;}if(accessibilityTraits){var trait=Array.isArray(accessibilityTraits)?accessibilityTraits[0]:accessibilityTraits;return accessibilityTraitsToRole[trait];}if(accessibilityComponentType){return accessibilityComponentTypeToRole[accessibilityComponentType];}};export default propsToAriaRole;","map":{"version":3,"sources":["C:/Users/arnol/code/entroprise/node_modules/react-web-gifted-chat/node_modules/react-native-web/dist/modules/AccessibilityUtil/propsToAriaRole.js"],"names":["accessibilityComponentTypeToRole","button","none","accessibilityTraitsToRole","adjustable","header","image","link","search","summary","propsToAriaRole","_ref","accessibilityComponentType","accessibilityRole","accessibilityTraits","trait","Array","isArray"],"mappings":"AASA,GAAIA,CAAAA,gCAAgC,CAAG,CACrCC,MAAM,CAAE,QAD6B,CAErCC,IAAI,CAAE,cAF+B,CAAvC,CAKA,GAAIC,CAAAA,yBAAyB,CAAG,CAC9BC,UAAU,CAAE,QADkB,CAE9BH,MAAM,CAAE,QAFsB,CAG9BI,MAAM,CAAE,SAHsB,CAI9BC,KAAK,CAAE,KAJuB,CAK9BC,IAAI,CAAE,MALwB,CAM9BL,IAAI,CAAE,cANwB,CAO9BM,MAAM,CAAE,QAPsB,CAQ9BC,OAAO,CAAE,QARqB,CAAhC,CAgBA,GAAIC,CAAAA,eAAe,CAAG,QAASA,CAAAA,eAAT,CAAyBC,IAAzB,CAA+B,CACnD,GAAIC,CAAAA,0BAA0B,CAAGD,IAAI,CAACC,0BAAtC,CACIC,iBAAiB,CAAGF,IAAI,CAACE,iBAD7B,CAEIC,mBAAmB,CAAGH,IAAI,CAACG,mBAF/B,CAIA,GAAID,iBAAJ,CAAuB,CACrB,MAAOA,CAAAA,iBAAP,CACD,CACD,GAAIC,mBAAJ,CAAyB,CACvB,GAAIC,CAAAA,KAAK,CAAGC,KAAK,CAACC,OAAN,CAAcH,mBAAd,EAAqCA,mBAAmB,CAAC,CAAD,CAAxD,CAA8DA,mBAA1E,CACA,MAAOX,CAAAA,yBAAyB,CAACY,KAAD,CAAhC,CACD,CACD,GAAIH,0BAAJ,CAAgC,CAC9B,MAAOZ,CAAAA,gCAAgC,CAACY,0BAAD,CAAvC,CACD,CACF,CAfD,CAiBA,cAAeF,CAAAA,eAAf","sourcesContent":["/**\n * Copyright (c) 2017-present, Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nvar accessibilityComponentTypeToRole = {\n  button: 'button',\n  none: 'presentation'\n};\n\nvar accessibilityTraitsToRole = {\n  adjustable: 'slider',\n  button: 'button',\n  header: 'heading',\n  image: 'img',\n  link: 'link',\n  none: 'presentation',\n  search: 'search',\n  summary: 'region'\n};\n\n/**\n * Provides compatibility with React Native's \"accessibilityTraits\" (iOS) and\n * \"accessibilityComponentType\" (Android), converting them to equivalent ARIA\n * roles.\n */\nvar propsToAriaRole = function propsToAriaRole(_ref) {\n  var accessibilityComponentType = _ref.accessibilityComponentType,\n      accessibilityRole = _ref.accessibilityRole,\n      accessibilityTraits = _ref.accessibilityTraits;\n\n  if (accessibilityRole) {\n    return accessibilityRole;\n  }\n  if (accessibilityTraits) {\n    var trait = Array.isArray(accessibilityTraits) ? accessibilityTraits[0] : accessibilityTraits;\n    return accessibilityTraitsToRole[trait];\n  }\n  if (accessibilityComponentType) {\n    return accessibilityComponentTypeToRole[accessibilityComponentType];\n  }\n};\n\nexport default propsToAriaRole;"]},"metadata":{},"sourceType":"module"}