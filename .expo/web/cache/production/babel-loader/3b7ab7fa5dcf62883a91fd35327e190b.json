{"ast":null,"code":"export default(function(str){var prefix=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\"\";if(!prefix){return str;}prefix+=\"/\";if(str.substr(0,prefix.length)===prefix){return str.slice(prefix.length-1);}return str;});","map":{"version":3,"sources":["C:/Users/arnol/code/entroprise/.cache/strip-prefix.js"],"names":["str","prefix","substr","length","slice"],"mappings":"AAKA,eAAe,SAACA,GAAD,CAAsB,IAAhBC,CAAAA,MAAgB,8DACnC,GAAI,CAACA,MAAL,CAAa,CACX,MAAOD,CAAAA,GAAP,CACD,CAEDC,MAAM,KAAN,CAEA,GAAID,GAAG,CAACE,MAAJ,CAAW,CAAX,CAAcD,MAAM,CAACE,MAArB,IAAiCF,MAArC,CAA6C,CAC3C,MAAOD,CAAAA,GAAG,CAACI,KAAJ,CAAUH,MAAM,CAACE,MAAP,CAAgB,CAA1B,CAAP,CACD,CAED,MAAOH,CAAAA,GAAP,CACD,CAZD","sourcesContent":["/**\n * Remove a prefix from a string. Return the input string if the given prefix\n * isn't found.\n */\n\nexport default (str, prefix = ``) => {\n  if (!prefix) {\n    return str\n  }\n\n  prefix += `/`\n\n  if (str.substr(0, prefix.length) === prefix) {\n    return str.slice(prefix.length - 1)\n  }\n\n  return str\n}\n"]},"metadata":{},"sourceType":"module"}