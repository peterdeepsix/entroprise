{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useEffect,useState,useRef}from\"react\";import Loadable from\"@loadable/component\";import firebase from\"gatsby-plugin-firebase\";import{useAuthState}from\"react-firebase-hooks/auth\";import*as facemesh from\"@tensorflow-models/facemesh\";import*as tf from\"@tensorflow/tfjs-core\";import*as tfjsWasm from\"@tensorflow/tfjs-backend-wasm\";import{useUserMedia}from\"./useUserMedia\";import{makeStyles}from\"@material-ui/core/styles\";import{Container,Box,Typography,Button,Card,CardContent,CardHeader,CardActions,IconButton,List,ListItem,ListItemSecondaryAction,ListItemText,ListItemAvatar,Avatar}from\"@material-ui/core\";import IndefiniteLoading from\"src/components/loading/indefiniteLoading\";var UsersList=Loadable(function(){return import(\"./UsersList\");},{fallback:React.createElement(IndefiniteLoading,{message:\"UsersList\"})});var RoomDialog=Loadable(function(){return import(\"./RoomDialog\");},{fallback:React.createElement(IndefiniteLoading,{message:\"RoomDialog\"})});var LocalTracks=Loadable(function(){return import(\"./LocalTracks\");},{fallback:React.createElement(IndefiniteLoading,{message:\"LocalTracks\"})});var useStyles=makeStyles(function(theme){return{video:{width:\"100%\"}};});var WebRTC=function WebRTC(){var classes=useStyles();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isDialogOpen=_useState2[0],setIsDialogOpen=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isCalling=_useState4[0],setIsCalling=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isOnline=_useState6[0],setIsOnline=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isLoading=_useState8[0],setIsLoading=_useState8[1];var videoRef=useRef();var mediaStream=useUserMedia({audio:false,video:true,video:{width:300,height:300}});function handleCanPlay(){videoRef.current.play();}var handleClickUser=function handleClickUser(){setIsDialogOpen(true);};var handleDialogClose=function handleDialogClose(){setIsDialogOpen(false);};var handleSetIsOnline=function handleSetIsOnline(){console.log(\"setIsOnline\");setIsOnline(true);videoRef.current.play();};var handleDetectFaces=function handleDetectFaces(){var model,current,predictions;return _regeneratorRuntime.async(function handleDetectFaces$(_context){while(1){switch(_context.prev=_context.next){case 0:console.log(\"handleDetectFaces\");console.log(\"model loading\");_context.next=4;return _regeneratorRuntime.awrap(facemesh.load());case 4:model=_context.sent;console.log(\"model loaded\");console.log(\"starting prediction\");current=videoRef.current;_context.next=10;return _regeneratorRuntime.awrap(model.estimateFaces(current));case 10:predictions=_context.sent;console.log(\"prediction completed\");if(predictions.length>0){predictions.forEach(function(prediction){console.log(prediction.faceInViewConfidence);if(prediction.faceInViewConfidence>=0.8){window.alert(\"User is Online\");}else{window.alert(\"User is disconnected.\");}});}case 13:case\"end\":return _context.stop();}}},null,null,null,Promise);};useEffect(function(){if(mediaStream&&videoRef.current&&!videoRef.current.srcObject){videoRef.current.srcObject=mediaStream;}return function(){if(mediaStream){mediaStream.getTracks()[0].stop();}};},[mediaStream]);return React.createElement(React.Fragment,null,React.createElement(Box,{mt:2,mb:1},React.createElement(Card,{variant:\"outlined\"},React.createElement(CardHeader,{title:\"User Status\"}),React.createElement(\"video\",{ref:videoRef,onCanPlay:handleCanPlay,playsInline:true,muted:true,width:\"100%\"}),React.createElement(CardContent,null,React.createElement(Typography,null,\"User\",isOnline&&\" is online\"||\" is disconnected\"),React.createElement(Button,{variant:\"contained\",color:\"primary\",onClick:handleDetectFaces},\"Predict\")))),React.createElement(UsersList,{callUser:handleClickUser}),isCalling&&React.createElement(IndefiniteLoading,{message:\"isCalling\"}),React.createElement(RoomDialog,{handleClose:handleDialogClose,open:isDialogOpen},React.createElement(Box,null,\"Call User\")));};export default WebRTC;","map":{"version":3,"sources":["C:/Users/arnol/code/entroprise/src/components/UsersPage/WebRTC.js"],"names":["React","useEffect","useState","useRef","Loadable","firebase","useAuthState","facemesh","tf","tfjsWasm","useUserMedia","makeStyles","Container","Box","Typography","Button","Card","CardContent","CardHeader","CardActions","IconButton","List","ListItem","ListItemSecondaryAction","ListItemText","ListItemAvatar","Avatar","IndefiniteLoading","UsersList","fallback","RoomDialog","LocalTracks","useStyles","theme","video","width","WebRTC","classes","isDialogOpen","setIsDialogOpen","isCalling","setIsCalling","isOnline","setIsOnline","isLoading","setIsLoading","videoRef","mediaStream","audio","height","handleCanPlay","current","play","handleClickUser","handleDialogClose","handleSetIsOnline","console","log","handleDetectFaces","load","model","estimateFaces","predictions","length","forEach","prediction","faceInViewConfidence","window","alert","srcObject","getTracks","stop"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\"\r\nimport Loadable from \"@loadable/component\"\r\n\r\nimport firebase from \"gatsby-plugin-firebase\"\r\nimport { useAuthState } from \"react-firebase-hooks/auth\"\r\nimport * as facemesh from \"@tensorflow-models/facemesh\"\r\nimport * as tf from \"@tensorflow/tfjs-core\"\r\nimport * as tfjsWasm from \"@tensorflow/tfjs-backend-wasm\"\r\n\r\nimport { useUserMedia } from \"./useUserMedia\"\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport {\r\n  Container,\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  CardActions,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemSecondaryAction,\r\n  ListItemText,\r\n  ListItemAvatar,\r\n  Avatar,\r\n} from \"@material-ui/core\"\r\n\r\nimport IndefiniteLoading from \"src/components/loading/indefiniteLoading\"\r\n\r\nconst UsersList = Loadable(() => import(\"./UsersList\"), {\r\n  fallback: <IndefiniteLoading message=\"UsersList\" />,\r\n})\r\n\r\nconst RoomDialog = Loadable(() => import(\"./RoomDialog\"), {\r\n  fallback: <IndefiniteLoading message=\"RoomDialog\" />,\r\n})\r\n\r\nconst LocalTracks = Loadable(() => import(\"./LocalTracks\"), {\r\n  fallback: <IndefiniteLoading message=\"LocalTracks\" />,\r\n})\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  video: { width: \"100%\" },\r\n}))\r\n\r\nconst WebRTC = () => {\r\n  const classes = useStyles()\r\n\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false)\r\n  const [isCalling, setIsCalling] = useState(false)\r\n  const [isOnline, setIsOnline] = useState(false)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n\r\n  const videoRef = useRef()\r\n  const mediaStream = useUserMedia({\r\n    audio: false,\r\n    video: true,\r\n    video: { width: 300, height: 300 },\r\n  })\r\n\r\n  function handleCanPlay() {\r\n    videoRef.current.play()\r\n  }\r\n\r\n  const handleClickUser = () => {\r\n    setIsDialogOpen(true)\r\n  }\r\n\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false)\r\n  }\r\n\r\n  const handleSetIsOnline = () => {\r\n    console.log(\"setIsOnline\")\r\n    setIsOnline(true)\r\n    videoRef.current.play()\r\n  }\r\n\r\n  const handleDetectFaces = async () => {\r\n    console.log(\"handleDetectFaces\")\r\n    console.log(\"model loading\")\r\n    const model = await facemesh.load()\r\n    console.log(\"model loaded\")\r\n    console.log(\"starting prediction\")\r\n    const current = videoRef.current\r\n    const predictions = await model.estimateFaces(current)\r\n    console.log(\"prediction completed\")\r\n    if (predictions.length > 0) {\r\n      predictions.forEach(prediction => {\r\n        console.log(prediction.faceInViewConfidence)\r\n        if (prediction.faceInViewConfidence >= 0.8) {\r\n          window.alert(\"User is Online\")\r\n        } else {\r\n          window.alert(\"User is disconnected.\")\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (mediaStream && videoRef.current && !videoRef.current.srcObject) {\r\n      videoRef.current.srcObject = mediaStream\r\n    }\r\n    return () => {\r\n      if (mediaStream) {\r\n        mediaStream.getTracks()[0].stop()\r\n      }\r\n    }\r\n  }, [mediaStream])\r\n\r\n  return (\r\n    <>\r\n      <Box mt={2} mb={1}>\r\n        <Card variant=\"outlined\">\r\n          <CardHeader title=\"User Status\" />\r\n          <video\r\n            ref={videoRef}\r\n            onCanPlay={handleCanPlay}\r\n            playsInline\r\n            muted\r\n            width={\"100%\"}\r\n          />\r\n          <CardContent>\r\n            <Typography>\r\n              User{(isOnline && \" is online\") || \" is disconnected\"}\r\n            </Typography>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleDetectFaces}\r\n            >\r\n              Predict\r\n            </Button>\r\n          </CardContent>\r\n        </Card>\r\n      </Box>\r\n\r\n      <UsersList callUser={handleClickUser} />\r\n      {isCalling && <IndefiniteLoading message=\"isCalling\" />}\r\n      <RoomDialog handleClose={handleDialogClose} open={isDialogOpen}>\r\n        <Box>Call User</Box>\r\n      </RoomDialog>\r\n    </>\r\n  )\r\n}\r\nexport default WebRTC\r\n"]},"metadata":{},"sourceType":"module"}