{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useState,useEffect}from\"react\";import firebase from\"gatsby-plugin-firebase\";import{useListVals}from\"react-firebase-hooks/database\";import{useCollection}from\"react-firebase-hooks/firestore\";import{GiftedChat}from\"react-web-gifted-chat\";import{Box,Typography,Card,CardHeader,CardContent}from\"@material-ui/core\";import{makeStyles}from\"@material-ui/core/styles\";var useStyles=makeStyles(function(theme){return{root:{width:\"80vw\"},chat:{height:300}};});var Channel=function Channel(_ref){var user=_ref.user;var classes=useStyles();var _useCollection=useCollection(firebase.firestore().collection(\"users\"),{snapshotListenOptions:{includeMetadataChanges:true}}),_useCollection2=_slicedToArray(_useCollection,1),users=_useCollection2[0];var _useListVals=useListVals(firebase.database().ref(\"messages\")),_useListVals2=_slicedToArray(_useListVals,3),messages=_useListVals2[0],messagesLoading=_useListVals2[1],messagesError=_useListVals2[2];var _onSend=function onSend(messages){for(var _iterator=messages,_isArray=Array.isArray(_iterator),_i=0,_iterator=_isArray?_iterator:_iterator[typeof Symbol===\"function\"?Symbol.iterator:\"@@iterator\"]();;){var _ref2;if(_isArray){if(_i>=_iterator.length)break;_ref2=_iterator[_i++];}else{_i=_iterator.next();if(_i.done)break;_ref2=_i.value;}var _message=_ref2;saveMessage(_message);}};var saveMessage=function saveMessage(message){return firebase.database().ref(\"/messages/\").push(message).catch(function(error){console.error(\"Error saving message to Database:\",error);});};return React.createElement(Box,{mb:1,pl:2,className:classes.root},React.createElement(Card,{variant:\"outlined\"},React.createElement(CardHeader,{title:\"Channel Name\"}),React.createElement(CardContent,null,React.createElement(Box,{className:classes.chat},React.createElement(GiftedChat,{messages:messages.slice().reverse(),onSend:function onSend(messages){return _onSend(messages);},user:user})))));};export default Channel;","map":{"version":3,"sources":["C:/Users/arnol/code/entroprise/src/components/ServicePage/Channel.js"],"names":["React","useState","useEffect","firebase","useListVals","useCollection","GiftedChat","Box","Typography","Card","CardHeader","CardContent","makeStyles","useStyles","theme","root","width","chat","height","Channel","user","classes","firestore","collection","snapshotListenOptions","includeMetadataChanges","users","database","ref","messages","messagesLoading","messagesError","onSend","message","saveMessage","push","catch","error","console","slice","reverse"],"mappings":"iEAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,QAAP,KAAqB,wBAArB,CACA,OAASC,WAAT,KAA4B,+BAA5B,CACA,OAASC,aAAT,KAA8B,gCAA9B,CACA,OAASC,UAAT,KAA2B,uBAA3B,CAEA,OACEC,GADF,CAEEC,UAFF,CAGEC,IAHF,CAIEC,UAJF,CAKEC,WALF,KAMO,mBANP,CAQA,OAASC,UAAT,KAA2B,0BAA3B,CAEA,GAAMC,CAAAA,SAAS,CAAGD,UAAU,CAAC,SAACE,KAAD,QAAY,CACvCC,IAAI,CAAE,CAAEC,KAAK,CAAE,MAAT,CADiC,CAEvCC,IAAI,CAAE,CAAEC,MAAM,CAAE,GAAV,CAFiC,CAAZ,EAAD,CAA5B,CAKA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,MAAc,IAAXC,CAAAA,IAAW,MAAXA,IAAW,CAC5B,GAAMC,CAAAA,OAAO,CAAGR,SAAS,EAAzB,CAD4B,mBAGZR,aAAa,CAACF,QAAQ,CAACmB,SAAT,GAAqBC,UAArB,CAAgC,OAAhC,CAAD,CAA2C,CACtEC,qBAAqB,CAAE,CAAEC,sBAAsB,CAAE,IAA1B,CAD+C,CAA3C,CAHD,kDAGrBC,KAHqB,qCAOuBtB,WAAW,CAC5DD,QAAQ,CAACwB,QAAT,GAAoBC,GAApB,CAAwB,UAAxB,CAD4D,CAPlC,8CAOrBC,QAPqB,kBAOXC,eAPW,kBAOMC,aAPN,kBAW5B,GAAMC,CAAAA,OAAM,CAAG,QAATA,CAAAA,MAAS,CAACH,QAAD,CAAc,CAC3B,kBAAsBA,QAAtB,4IAAgC,0IAArBI,CAAAA,QAAqB,OAC9BC,WAAW,CAACD,QAAD,CAAX,CACD,CACF,CAJD,CAMA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACD,OAAD,CAAa,CAC/B,MAAO9B,CAAAA,QAAQ,CACZwB,QADI,GAEJC,GAFI,CAEA,YAFA,EAGJO,IAHI,CAGCF,OAHD,EAIJG,KAJI,CAIE,SAACC,KAAD,CAAW,CAChBC,OAAO,CAACD,KAAR,CAAc,mCAAd,CAAmDA,KAAnD,EACD,CANI,CAAP,CAOD,CARD,CAUA,MACE,qBAAC,GAAD,EAAK,EAAE,CAAE,CAAT,CAAY,EAAE,CAAE,CAAhB,CAAmB,SAAS,CAAEhB,OAAO,CAACN,IAAtC,EACE,oBAAC,IAAD,EAAM,OAAO,CAAC,UAAd,EACE,oBAAC,UAAD,EAAY,KAAK,CAAC,cAAlB,EADF,CAEE,oBAAC,WAAD,MACE,oBAAC,GAAD,EAAK,SAAS,CAAEM,OAAO,CAACJ,IAAxB,EACE,oBAAC,UAAD,EACE,QAAQ,CAAEY,QAAQ,CAACU,KAAT,GAAiBC,OAAjB,EADZ,CAEE,MAAM,CAAE,gBAACX,QAAD,QAAcG,CAAAA,OAAM,CAACH,QAAD,CAApB,EAFV,CAGE,IAAI,CAAET,IAHR,EADF,CADF,CAFF,CADF,CADF,CAgBD,CA3CD,CA4CA,cAAeD,CAAAA,OAAf","sourcesContent":["import React, { useState, useEffect } from \"react\"\r\nimport firebase from \"gatsby-plugin-firebase\"\r\nimport { useListVals } from \"react-firebase-hooks/database\"\r\nimport { useCollection } from \"react-firebase-hooks/firestore\"\r\nimport { GiftedChat } from \"react-web-gifted-chat\"\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n} from \"@material-ui/core\"\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: { width: \"80vw\" },\r\n  chat: { height: 300 },\r\n}))\r\n\r\nconst Channel = ({ user }) => {\r\n  const classes = useStyles()\r\n\r\n  const [users] = useCollection(firebase.firestore().collection(\"users\"), {\r\n    snapshotListenOptions: { includeMetadataChanges: true },\r\n  })\r\n\r\n  const [messages, messagesLoading, messagesError] = useListVals(\r\n    firebase.database().ref(\"messages\")\r\n  )\r\n\r\n  const onSend = (messages) => {\r\n    for (const message of messages) {\r\n      saveMessage(message)\r\n    }\r\n  }\r\n\r\n  const saveMessage = (message) => {\r\n    return firebase\r\n      .database()\r\n      .ref(\"/messages/\")\r\n      .push(message)\r\n      .catch((error) => {\r\n        console.error(\"Error saving message to Database:\", error)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <Box mb={1} pl={2} className={classes.root}>\r\n      <Card variant=\"outlined\">\r\n        <CardHeader title=\"Channel Name\" />\r\n        <CardContent>\r\n          <Box className={classes.chat}>\r\n            <GiftedChat\r\n              messages={messages.slice().reverse()}\r\n              onSend={(messages) => onSend(messages)}\r\n              user={user}\r\n            />\r\n          </Box>\r\n        </CardContent>\r\n      </Card>\r\n    </Box>\r\n  )\r\n}\r\nexport default Channel\r\n"]},"metadata":{},"sourceType":"module"}