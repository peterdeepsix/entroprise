{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useState,useCallback}from\"react\";import Lobby from\"./Lobby\";import Room from\"./Room\";var VideoChat=function VideoChat(_ref){var user=_ref.user;var username=user.username;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),roomName=_useState2[0],setRoomName=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),token=_useState4[0],setToken=_useState4[1];var handleRoomNameChange=useCallback(function(event){setRoomName(event.target.value);},[]);var handleSubmit=useCallback(function _callee(event){var data;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();_context.next=3;return _regeneratorRuntime.awrap(fetch(\"https://us-central1-entroprise-production.cloudfunctions.net/token\",{method:\"POST\",body:JSON.stringify({identity:username,roomName:roomName}),headers:{\"Content-Type\":\"application/json\"}}).then(function(res){return res.json();}));case 3:data=_context.sent;setToken(data.token);case 5:case\"end\":return _context.stop();}}},null,null,null,Promise);},[roomName,username]);var handleLogout=useCallback(function(event){setToken(null);},[]);var render;if(token){render=React.createElement(Room,{roomName:roomName,token:token,handleLogout:handleLogout});}else{render=React.createElement(Lobby,{username:username,roomName:roomName,handleRoomNameChange:handleRoomNameChange,handleSubmit:handleSubmit});}return render;};export default VideoChat;","map":{"version":3,"sources":["C:/Users/arnol/code/entroprise/src/components/ServicePage/VideoChat.js"],"names":["React","useState","useCallback","Lobby","Room","VideoChat","user","username","roomName","setRoomName","token","setToken","handleRoomNameChange","event","target","value","handleSubmit","preventDefault","fetch","method","body","JSON","stringify","identity","headers","then","res","json","data","handleLogout","render"],"mappings":"6HAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,WAA1B,KAA6C,OAA7C,CACA,MAAOC,CAAAA,KAAP,eACA,MAAOC,CAAAA,IAAP,cAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAAc,IAAXC,CAAAA,IAAW,MAAXA,IAAW,IACtBC,CAAAA,QADsB,CACTD,IADS,CACtBC,QADsB,eAEEN,QAAQ,CAAC,EAAD,CAFV,wCAEvBO,QAFuB,eAEbC,WAFa,8BAGJR,QAAQ,CAAC,IAAD,CAHJ,yCAGvBS,KAHuB,eAGhBC,QAHgB,eAK9B,GAAMC,CAAAA,oBAAoB,CAAGV,WAAW,CAAC,SAAAW,KAAK,CAAI,CAChDJ,WAAW,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX,CACD,CAFuC,CAErC,EAFqC,CAAxC,CAIA,GAAMC,CAAAA,YAAY,CAAGd,WAAW,CAC9B,iBAAMW,KAAN,4HACEA,KAAK,CAACI,cAAN,GADF,iDAEqBC,KAAK,CACtB,oEADsB,CAEtB,CACEC,MAAM,CAAE,MADV,CAEEC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACnBC,QAAQ,CAAEhB,QADS,CAEnBC,QAAQ,CAAEA,QAFS,CAAf,CAFR,CAMEgB,OAAO,CAAE,CACP,eAAgB,kBADT,CANX,CAFsB,CAAL,CAYjBC,IAZiB,CAYZ,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAJ,EAAJ,EAZS,CAFrB,SAEQC,IAFR,eAeEjB,QAAQ,CAACiB,IAAI,CAAClB,KAAN,CAAR,CAfF,qEAD8B,CAkB9B,CAACF,QAAD,CAAWD,QAAX,CAlB8B,CAAhC,CAqBA,GAAMsB,CAAAA,YAAY,CAAG3B,WAAW,CAAC,SAAAW,KAAK,CAAI,CACxCF,QAAQ,CAAC,IAAD,CAAR,CACD,CAF+B,CAE7B,EAF6B,CAAhC,CAIA,GAAImB,CAAAA,MAAJ,CACA,GAAIpB,KAAJ,CAAW,CACToB,MAAM,CACJ,oBAAC,IAAD,EAAM,QAAQ,CAAEtB,QAAhB,CAA0B,KAAK,CAAEE,KAAjC,CAAwC,YAAY,CAAEmB,YAAtD,EADF,CAGD,CAJD,IAIO,CACLC,MAAM,CACJ,oBAAC,KAAD,EACE,QAAQ,CAAEvB,QADZ,CAEE,QAAQ,CAAEC,QAFZ,CAGE,oBAAoB,CAAEI,oBAHxB,CAIE,YAAY,CAAEI,YAJhB,EADF,CAQD,CACD,MAAOc,CAAAA,MAAP,CACD,CAlDD,CAoDA,cAAezB,CAAAA,SAAf","sourcesContent":["import React, { useState, useCallback } from \"react\"\r\nimport Lobby from \"./Lobby\"\r\nimport Room from \"./Room\"\r\n\r\nconst VideoChat = ({ user }) => {\r\n  const { username } = user\r\n  const [roomName, setRoomName] = useState(\"\")\r\n  const [token, setToken] = useState(null)\r\n\r\n  const handleRoomNameChange = useCallback(event => {\r\n    setRoomName(event.target.value)\r\n  }, [])\r\n\r\n  const handleSubmit = useCallback(\r\n    async event => {\r\n      event.preventDefault()\r\n      const data = await fetch(\r\n        \"https://us-central1-entroprise-production.cloudfunctions.net/token\",\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify({\r\n            identity: username,\r\n            roomName: roomName,\r\n          }),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      ).then(res => res.json())\r\n      setToken(data.token)\r\n    },\r\n    [roomName, username]\r\n  )\r\n\r\n  const handleLogout = useCallback(event => {\r\n    setToken(null)\r\n  }, [])\r\n\r\n  let render\r\n  if (token) {\r\n    render = (\r\n      <Room roomName={roomName} token={token} handleLogout={handleLogout} />\r\n    )\r\n  } else {\r\n    render = (\r\n      <Lobby\r\n        username={username}\r\n        roomName={roomName}\r\n        handleRoomNameChange={handleRoomNameChange}\r\n        handleSubmit={handleSubmit}\r\n      />\r\n    )\r\n  }\r\n  return render\r\n}\r\n\r\nexport default VideoChat\r\n"]},"metadata":{},"sourceType":"module"}