{"ast":null,"code":"var plugins=require(\"./api-runner-browser-plugins\");var _require$publicLoader=require(\"./loader\").publicLoader,getResourcesForPathname=_require$publicLoader.getResourcesForPathname,getResourcesForPathnameSync=_require$publicLoader.getResourcesForPathnameSync,getResourceURLsForPathname=_require$publicLoader.getResourceURLsForPathname,loadPage=_require$publicLoader.loadPage,loadPageSync=_require$publicLoader.loadPageSync;exports.apiRunner=function(api){var args=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var defaultReturn=arguments.length>2?arguments[2]:undefined;var argTransform=arguments.length>3?arguments[3]:undefined;if(process.env.CYPRESS_SUPPORT){if(window.___apiHandler){window.___apiHandler(api);}else if(window.___resolvedAPIs){window.___resolvedAPIs.push(api);}else{window.___resolvedAPIs=[api];}}var results=plugins.map(function(plugin){if(!plugin.plugin[api]){return undefined;}args.getResourcesForPathnameSync=getResourcesForPathnameSync;args.getResourcesForPathname=getResourcesForPathname;args.getResourceURLsForPathname=getResourceURLsForPathname;args.loadPage=loadPage;args.loadPageSync=loadPageSync;var result=plugin.plugin[api](args,plugin.options);if(result&&argTransform){args=argTransform({args:args,result:result,plugin:plugin});}return result;});results=results.filter(function(result){return typeof result!==\"undefined\";});if(results.length>0){return results;}else if(defaultReturn){return[defaultReturn];}else{return[];}};exports.apiRunnerAsync=function(api,args,defaultReturn){return plugins.reduce(function(previous,next){return next.plugin[api]?previous.then(function(){return next.plugin[api](args,next.options);}):previous;},Promise.resolve());};","map":{"version":3,"sources":["C:/Users/arnol/code/entroprise/.cache/api-runner-browser.js"],"names":["plugins","require","publicLoader","getResourcesForPathname","getResourcesForPathnameSync","getResourceURLsForPathname","loadPage","loadPageSync","exports","apiRunner","api","args","defaultReturn","argTransform","process","env","CYPRESS_SUPPORT","window","___apiHandler","___resolvedAPIs","push","results","map","plugin","undefined","result","options","filter","length","apiRunnerAsync","reduce","previous","next","then","Promise","resolve"],"mappings":"AAAA,GAAMA,CAAAA,OAAO,CAAGC,OAAO,gCAAvB,C,0BAOIA,OAAO,YAAP,CAAoBC,Y,CALtBC,uB,uBAAAA,uB,CACAC,2B,uBAAAA,2B,CACAC,0B,uBAAAA,0B,CACAC,Q,uBAAAA,Q,CACAC,Y,uBAAAA,Y,CAGFC,OAAO,CAACC,SAAR,CAAoB,SAACC,GAAD,CAAiD,IAA3CC,CAAAA,IAA2C,2DAApC,EAAoC,IAAhCC,CAAAA,aAAgC,8CAAjBC,CAAAA,YAAiB,2CAEnE,GAAIC,OAAO,CAACC,GAAR,CAAYC,eAAhB,CAAiC,CAC/B,GAAIC,MAAM,CAACC,aAAX,CAA0B,CACxBD,MAAM,CAACC,aAAP,CAAqBR,GAArB,EACD,CAFD,IAEO,IAAIO,MAAM,CAACE,eAAX,CAA4B,CACjCF,MAAM,CAACE,eAAP,CAAuBC,IAAvB,CAA4BV,GAA5B,EACD,CAFM,IAEA,CACLO,MAAM,CAACE,eAAP,CAAyB,CAACT,GAAD,CAAzB,CACD,CACF,CAED,GAAIW,CAAAA,OAAO,CAAGrB,OAAO,CAACsB,GAAR,CAAY,SAAAC,MAAM,CAAI,CAClC,GAAI,CAACA,MAAM,CAACA,MAAP,CAAcb,GAAd,CAAL,CAAyB,CACvB,MAAOc,CAAAA,SAAP,CACD,CAGDb,IAAI,CAACP,2BAAL,CAAmCA,2BAAnC,CAEAO,IAAI,CAACR,uBAAL,CAA+BA,uBAA/B,CACAQ,IAAI,CAACN,0BAAL,CAAkCA,0BAAlC,CACAM,IAAI,CAACL,QAAL,CAAgBA,QAAhB,CACAK,IAAI,CAACJ,YAAL,CAAoBA,YAApB,CAEA,GAAMkB,CAAAA,MAAM,CAAGF,MAAM,CAACA,MAAP,CAAcb,GAAd,EAAmBC,IAAnB,CAAyBY,MAAM,CAACG,OAAhC,CAAf,CACA,GAAID,MAAM,EAAIZ,YAAd,CAA4B,CAC1BF,IAAI,CAAGE,YAAY,CAAC,CAAEF,IAAI,CAAJA,IAAF,CAAQc,MAAM,CAANA,MAAR,CAAgBF,MAAM,CAANA,MAAhB,CAAD,CAAnB,CACD,CACD,MAAOE,CAAAA,MAAP,CACD,CAlBa,CAAd,CAqBAJ,OAAO,CAAGA,OAAO,CAACM,MAAR,CAAe,SAAAF,MAAM,QAAI,OAAOA,CAAAA,MAAP,cAAJ,EAArB,CAAV,CAEA,GAAIJ,OAAO,CAACO,MAAR,CAAiB,CAArB,CAAwB,CACtB,MAAOP,CAAAA,OAAP,CACD,CAFD,IAEO,IAAIT,aAAJ,CAAmB,CACxB,MAAO,CAACA,aAAD,CAAP,CACD,CAFM,IAEA,CACL,MAAO,EAAP,CACD,CACF,CA1CD,CA4CAJ,OAAO,CAACqB,cAAR,CAAyB,SAACnB,GAAD,CAAMC,IAAN,CAAYC,aAAZ,QACvBZ,CAAAA,OAAO,CAAC8B,MAAR,CACE,SAACC,QAAD,CAAWC,IAAX,QACEA,CAAAA,IAAI,CAACT,MAAL,CAAYb,GAAZ,EACIqB,QAAQ,CAACE,IAAT,CAAc,iBAAMD,CAAAA,IAAI,CAACT,MAAL,CAAYb,GAAZ,EAAiBC,IAAjB,CAAuBqB,IAAI,CAACN,OAA5B,CAAN,EAAd,CADJ,CAEIK,QAHN,EADF,CAKEG,OAAO,CAACC,OAAR,EALF,CADuB,EAAzB","sourcesContent":["const plugins = require(`./api-runner-browser-plugins`)\nconst {\n  getResourcesForPathname,\n  getResourcesForPathnameSync,\n  getResourceURLsForPathname,\n  loadPage,\n  loadPageSync,\n} = require(`./loader`).publicLoader\n\nexports.apiRunner = (api, args = {}, defaultReturn, argTransform) => {\n  // Hooks for gatsby-cypress's API handler\n  if (process.env.CYPRESS_SUPPORT) {\n    if (window.___apiHandler) {\n      window.___apiHandler(api)\n    } else if (window.___resolvedAPIs) {\n      window.___resolvedAPIs.push(api)\n    } else {\n      window.___resolvedAPIs = [api]\n    }\n  }\n\n  let results = plugins.map(plugin => {\n    if (!plugin.plugin[api]) {\n      return undefined\n    }\n\n    // Deprecated April 2019. Use `loadPageSync` instead\n    args.getResourcesForPathnameSync = getResourcesForPathnameSync\n    // Deprecated April 2019. Use `loadPage` instead\n    args.getResourcesForPathname = getResourcesForPathname\n    args.getResourceURLsForPathname = getResourceURLsForPathname\n    args.loadPage = loadPage\n    args.loadPageSync = loadPageSync\n\n    const result = plugin.plugin[api](args, plugin.options)\n    if (result && argTransform) {\n      args = argTransform({ args, result, plugin })\n    }\n    return result\n  })\n\n  // Filter out undefined results.\n  results = results.filter(result => typeof result !== `undefined`)\n\n  if (results.length > 0) {\n    return results\n  } else if (defaultReturn) {\n    return [defaultReturn]\n  } else {\n    return []\n  }\n}\n\nexports.apiRunnerAsync = (api, args, defaultReturn) =>\n  plugins.reduce(\n    (previous, next) =>\n      next.plugin[api]\n        ? previous.then(() => next.plugin[api](args, next.options))\n        : previous,\n    Promise.resolve()\n  )\n"]},"metadata":{},"sourceType":"script"}