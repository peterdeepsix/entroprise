{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";import{apiRunner,apiRunnerAsync}from\"./api-runner-browser\";import React from\"react\";import ReactDOM from\"react-dom\";import{Router,navigate,Location,BaseContext}from\"@reach/router\";import{ScrollContext}from\"gatsby-react-router-scroll\";import domReady from\"@mikaelkristiansson/domready\";import{shouldUpdateScroll,init as navigationInit,RouteUpdates}from\"./navigation\";import emitter from\"./emitter\";import PageRenderer from\"./page-renderer\";import asyncRequires from\"./async-requires\";import{setLoader,ProdLoader,publicLoader,PageResourceStatus}from\"./loader\";import EnsureResources from\"./ensure-resources\";import stripPrefix from\"./strip-prefix\";import matchPaths from\"./match-paths.json\";var loader=new ProdLoader(asyncRequires,matchPaths);setLoader(loader);loader.setApiRunner(apiRunner);window.asyncRequires=asyncRequires;window.___emitter=emitter;window.___loader=publicLoader;navigationInit();apiRunnerAsync(\"onClientEntry\").then(function(){if(apiRunner(\"registerServiceWorker\").length>0){require(\"./register-service-worker\");}var RouteHandler=function RouteHandler(props){return React.createElement(BaseContext.Provider,{value:{baseuri:\"/\",basepath:\"/\"}},React.createElement(PageRenderer,props));};var LocationHandler=function(_React$Component){_inherits(LocationHandler,_React$Component);function LocationHandler(){_classCallCheck(this,LocationHandler);return _possibleConstructorReturn(this,_getPrototypeOf(LocationHandler).apply(this,arguments));}_createClass(LocationHandler,[{key:\"render\",value:function render(){var _this=this;var location=this.props.location;return React.createElement(EnsureResources,{location:location},function(_ref){var pageResources=_ref.pageResources,location=_ref.location;return React.createElement(RouteUpdates,{location:location},React.createElement(ScrollContext,{location:location,shouldUpdateScroll:shouldUpdateScroll},React.createElement(Router,{basepath:__BASE_PATH__,location:location,id:\"gatsby-focus-wrapper\"},React.createElement(RouteHandler,_extends({path:pageResources.page.path===\"/404.html\"?stripPrefix(location.pathname,__BASE_PATH__):encodeURI(pageResources.page.matchPath||pageResources.page.path)},_this.props,{location:location,pageResources:pageResources},pageResources.json)))));});}}]);return LocationHandler;}(React.Component);var _window=window,pagePath=_window.pagePath,browserLoc=_window.location;if(pagePath&&__BASE_PATH__+pagePath!==browserLoc.pathname&&!(loader.findMatchPath(stripPrefix(browserLoc.pathname,__BASE_PATH__))||pagePath===\"/404.html\"||pagePath.match(/^\\/404\\/?$/)||pagePath.match(/^\\/offline-plugin-app-shell-fallback\\/?$/))){navigate(__BASE_PATH__+pagePath+browserLoc.search+browserLoc.hash,{replace:true});}publicLoader.loadPage(browserLoc.pathname).then(function(page){if(!page||page.status===PageResourceStatus.Error){throw new Error(\"page resources for \"+browserLoc.pathname+\" not found. Not rendering React\");}window.___webpackCompilationHash=page.page.webpackCompilationHash;var Root=function Root(){return React.createElement(Location,null,function(locationContext){return React.createElement(LocationHandler,locationContext);});};var WrappedRoot=apiRunner(\"wrapRootElement\",{element:React.createElement(Root,null)},React.createElement(Root,null),function(_ref2){var result=_ref2.result;return{element:result};}).pop();var NewRoot=function NewRoot(){return WrappedRoot;};var renderer=apiRunner(\"replaceHydrateFunction\",undefined,ReactDOM.hydrate)[0];domReady(function(){renderer(React.createElement(NewRoot,null),typeof window!==\"undefined\"?document.getElementById(\"___gatsby\"):void 0,function(){apiRunner(\"onInitialClientRender\");});});});});","map":{"version":3,"sources":["C:/Users/arnol/code/entroprise/.cache/production-app.js"],"names":["apiRunner","apiRunnerAsync","React","ReactDOM","Router","navigate","Location","BaseContext","ScrollContext","domReady","shouldUpdateScroll","init","navigationInit","RouteUpdates","emitter","PageRenderer","asyncRequires","setLoader","ProdLoader","publicLoader","PageResourceStatus","EnsureResources","stripPrefix","matchPaths","loader","setApiRunner","window","___emitter","___loader","then","length","require","RouteHandler","props","baseuri","basepath","LocationHandler","location","pageResources","__BASE_PATH__","page","path","pathname","encodeURI","matchPath","json","Component","pagePath","browserLoc","findMatchPath","match","search","hash","replace","loadPage","status","Error","___webpackCompilationHash","webpackCompilationHash","Root","locationContext","WrappedRoot","element","result","pop","NewRoot","renderer","undefined","hydrate","document","getElementById"],"mappings":"wYAAA,OAASA,SAAT,CAAoBC,cAApB,4BACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,OAASC,MAAT,CAAiBC,QAAjB,CAA2BC,QAA3B,CAAqCC,WAArC,KAAwD,eAAxD,CACA,OAASC,aAAT,KAA8B,4BAA9B,CACA,MAAOC,CAAAA,QAAP,KAAqB,8BAArB,CACA,OACEC,kBADF,CAEEC,IAAI,GAAIC,CAAAA,cAFV,CAGEC,YAHF,oBAKA,MAAOC,CAAAA,OAAP,iBACA,MAAOC,CAAAA,YAAP,uBACA,MAAOC,CAAAA,aAAP,wBACA,OACEC,SADF,CAEEC,UAFF,CAGEC,YAHF,CAIEC,kBAJF,gBAMA,MAAOC,CAAAA,eAAP,0BACA,MAAOC,CAAAA,WAAP,sBAGA,MAAOC,CAAAA,UAAP,0BAEA,GAAMC,CAAAA,MAAM,CAAG,GAAIN,CAAAA,UAAJ,CAAeF,aAAf,CAA8BO,UAA9B,CAAf,CACAN,SAAS,CAACO,MAAD,CAAT,CACAA,MAAM,CAACC,YAAP,CAAoBzB,SAApB,EAEA0B,MAAM,CAACV,aAAP,CAAuBA,aAAvB,CACAU,MAAM,CAACC,UAAP,CAAoBb,OAApB,CACAY,MAAM,CAACE,SAAP,CAAmBT,YAAnB,CAEAP,cAAc,GAEdX,cAAc,iBAAd,CAAgC4B,IAAhC,CAAqC,UAAM,CAGzC,GAAI7B,SAAS,yBAAT,CAAmC8B,MAAnC,CAA4C,CAAhD,CAAmD,CACjDC,OAAO,6BAAP,CACD,CAUD,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAC,KAAK,QACxB,qBAAC,WAAD,CAAa,QAAb,EACE,KAAK,CAAE,CACLC,OAAO,IADF,CAELC,QAAQ,IAFH,CADT,EAME,oBAAC,YAAD,CAAkBF,KAAlB,CANF,CADwB,EAA1B,CAfyC,GA0BnCG,CAAAA,eA1BmC,4SA2B9B,mBACCC,CAAAA,QADD,CACc,KAAKJ,KADnB,CACCI,QADD,CAEP,MACE,qBAAC,eAAD,EAAiB,QAAQ,CAAEA,QAA3B,EACG,kBAAGC,CAAAA,aAAH,MAAGA,aAAH,CAAkBD,QAAlB,MAAkBA,QAAlB,OACC,qBAAC,YAAD,EAAc,QAAQ,CAAEA,QAAxB,EACE,oBAAC,aAAD,EACE,QAAQ,CAAEA,QADZ,CAEE,kBAAkB,CAAE3B,kBAFtB,EAIE,oBAAC,MAAD,EACE,QAAQ,CAAE6B,aADZ,CAEE,QAAQ,CAAEF,QAFZ,CAGE,EAAE,CAAC,sBAHL,EAKE,oBAAC,YAAD,WACE,IAAI,CACFC,aAAa,CAACE,IAAd,CAAmBC,IAAnB,eACInB,WAAW,CAACe,QAAQ,CAACK,QAAV,CAAoBH,aAApB,CADf,CAEII,SAAS,CACPL,aAAa,CAACE,IAAd,CAAmBI,SAAnB,EACEN,aAAa,CAACE,IAAd,CAAmBC,IAFd,CAJjB,EASM,KAAI,CAACR,KATX,EAUE,QAAQ,CAAEI,QAVZ,CAWE,aAAa,CAAEC,aAXjB,EAYMA,aAAa,CAACO,IAZpB,EALF,CAJF,CADF,CADD,EADH,CADF,CAiCD,CA9DsC,6BA0BX3C,KAAK,CAAC4C,SA1BK,cAiEEpB,MAjEF,CAiEjCqB,QAjEiC,SAiEjCA,QAjEiC,CAiEbC,UAjEa,SAiEvBX,QAjEuB,CA0EzC,GACEU,QAAQ,EACRR,aAAa,CAAGQ,QAAhB,GAA6BC,UAAU,CAACN,QADxC,EAEA,EACElB,MAAM,CAACyB,aAAP,CAAqB3B,WAAW,CAAC0B,UAAU,CAACN,QAAZ,CAAsBH,aAAtB,CAAhC,GACAQ,QAAQ,cADR,EAEAA,QAAQ,CAACG,KAAT,CAAe,YAAf,CAFA,EAGAH,QAAQ,CAACG,KAAT,CAAe,0CAAf,CAJF,CAHF,CASE,CACA7C,QAAQ,CAACkC,aAAa,CAAGQ,QAAhB,CAA2BC,UAAU,CAACG,MAAtC,CAA+CH,UAAU,CAACI,IAA3D,CAAiE,CACvEC,OAAO,CAAE,IAD8D,CAAjE,CAAR,CAGD,CAEDlC,YAAY,CAACmC,QAAb,CAAsBN,UAAU,CAACN,QAAjC,EAA2Cb,IAA3C,CAAgD,SAAAW,IAAI,CAAI,CACtD,GAAI,CAACA,IAAD,EAASA,IAAI,CAACe,MAAL,GAAgBnC,kBAAkB,CAACoC,KAAhD,CAAuD,CACrD,KAAM,IAAIA,CAAAA,KAAJ,uBACkBR,UAAU,CAACN,QAD7B,mCAAN,CAGD,CAEDhB,MAAM,CAAC+B,yBAAP,CAAmCjB,IAAI,CAACA,IAAL,CAAUkB,sBAA7C,CAEA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,SACX,qBAAC,QAAD,MACG,SAAAC,eAAe,QAAI,qBAAC,eAAD,CAAqBA,eAArB,CAAJ,EADlB,CADW,EAAb,CAMA,GAAMC,CAAAA,WAAW,CAAG7D,SAAS,mBAE3B,CAAE8D,OAAO,CAAE,oBAAC,IAAD,MAAX,CAF2B,CAG3B,oBAAC,IAAD,MAH2B,CAI3B,eAAgB,IAAbC,CAAAA,MAAa,OAAbA,MAAa,CACd,MAAO,CAAED,OAAO,CAAEC,MAAX,CAAP,CACD,CAN0B,CAAT,CAOlBC,GAPkB,EAApB,CASA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,SAAMJ,CAAAA,WAAN,EAAhB,CAEA,GAAMK,CAAAA,QAAQ,CAAGlE,SAAS,0BAExBmE,SAFwB,CAGxBhE,QAAQ,CAACiE,OAHe,CAAT,CAIf,CAJe,CAAjB,CAMA3D,QAAQ,CAAC,UAAM,CACbyD,QAAQ,CACN,oBAAC,OAAD,MADM,CAEN,MAAOxC,CAAAA,MAAP,eACI2C,QAAQ,CAACC,cAAT,aADJ,CAEI,IAAK,EAJH,CAKN,UAAM,CACJtE,SAAS,yBAAT,CACD,CAPK,CAAR,CASD,CAVO,CAAR,CAWD,CA3CD,EA4CD,CArID","sourcesContent":["import { apiRunner, apiRunnerAsync } from \"./api-runner-browser\"\nimport React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { Router, navigate, Location, BaseContext } from \"@reach/router\"\nimport { ScrollContext } from \"gatsby-react-router-scroll\"\nimport domReady from \"@mikaelkristiansson/domready\"\nimport {\n  shouldUpdateScroll,\n  init as navigationInit,\n  RouteUpdates,\n} from \"./navigation\"\nimport emitter from \"./emitter\"\nimport PageRenderer from \"./page-renderer\"\nimport asyncRequires from \"./async-requires\"\nimport {\n  setLoader,\n  ProdLoader,\n  publicLoader,\n  PageResourceStatus,\n} from \"./loader\"\nimport EnsureResources from \"./ensure-resources\"\nimport stripPrefix from \"./strip-prefix\"\n\n// Generated during bootstrap\nimport matchPaths from \"./match-paths.json\"\n\nconst loader = new ProdLoader(asyncRequires, matchPaths)\nsetLoader(loader)\nloader.setApiRunner(apiRunner)\n\nwindow.asyncRequires = asyncRequires\nwindow.___emitter = emitter\nwindow.___loader = publicLoader\n\nnavigationInit()\n\napiRunnerAsync(`onClientEntry`).then(() => {\n  // Let plugins register a service worker. The plugin just needs\n  // to return true.\n  if (apiRunner(`registerServiceWorker`).length > 0) {\n    require(`./register-service-worker`)\n  }\n\n  // In gatsby v2 if Router is used in page using matchPaths\n  // paths need to contain full path.\n  // For example:\n  //   - page have `/app/*` matchPath\n  //   - inside template user needs to use `/app/xyz` as path\n  // Resetting `basepath`/`baseuri` keeps current behaviour\n  // to not introduce breaking change.\n  // Remove this in v3\n  const RouteHandler = props => (\n    <BaseContext.Provider\n      value={{\n        baseuri: `/`,\n        basepath: `/`,\n      }}\n    >\n      <PageRenderer {...props} />\n    </BaseContext.Provider>\n  )\n\n  class LocationHandler extends React.Component {\n    render() {\n      const { location } = this.props\n      return (\n        <EnsureResources location={location}>\n          {({ pageResources, location }) => (\n            <RouteUpdates location={location}>\n              <ScrollContext\n                location={location}\n                shouldUpdateScroll={shouldUpdateScroll}\n              >\n                <Router\n                  basepath={__BASE_PATH__}\n                  location={location}\n                  id=\"gatsby-focus-wrapper\"\n                >\n                  <RouteHandler\n                    path={\n                      pageResources.page.path === `/404.html`\n                        ? stripPrefix(location.pathname, __BASE_PATH__)\n                        : encodeURI(\n                            pageResources.page.matchPath ||\n                              pageResources.page.path\n                          )\n                    }\n                    {...this.props}\n                    location={location}\n                    pageResources={pageResources}\n                    {...pageResources.json}\n                  />\n                </Router>\n              </ScrollContext>\n            </RouteUpdates>\n          )}\n        </EnsureResources>\n      )\n    }\n  }\n\n  const { pagePath, location: browserLoc } = window\n\n  // Explicitly call navigate if the canonical path (window.pagePath)\n  // is different to the browser path (window.location.pathname). But\n  // only if NONE of the following conditions hold:\n  //\n  // - The url matches a client side route (page.matchPath)\n  // - it's a 404 page\n  // - it's the offline plugin shell (/offline-plugin-app-shell-fallback/)\n  if (\n    pagePath &&\n    __BASE_PATH__ + pagePath !== browserLoc.pathname &&\n    !(\n      loader.findMatchPath(stripPrefix(browserLoc.pathname, __BASE_PATH__)) ||\n      pagePath === `/404.html` ||\n      pagePath.match(/^\\/404\\/?$/) ||\n      pagePath.match(/^\\/offline-plugin-app-shell-fallback\\/?$/)\n    )\n  ) {\n    navigate(__BASE_PATH__ + pagePath + browserLoc.search + browserLoc.hash, {\n      replace: true,\n    })\n  }\n\n  publicLoader.loadPage(browserLoc.pathname).then(page => {\n    if (!page || page.status === PageResourceStatus.Error) {\n      throw new Error(\n        `page resources for ${browserLoc.pathname} not found. Not rendering React`\n      )\n    }\n\n    window.___webpackCompilationHash = page.page.webpackCompilationHash\n\n    const Root = () => (\n      <Location>\n        {locationContext => <LocationHandler {...locationContext} />}\n      </Location>\n    )\n\n    const WrappedRoot = apiRunner(\n      `wrapRootElement`,\n      { element: <Root /> },\n      <Root />,\n      ({ result }) => {\n        return { element: result }\n      }\n    ).pop()\n\n    const NewRoot = () => WrappedRoot\n\n    const renderer = apiRunner(\n      `replaceHydrateFunction`,\n      undefined,\n      ReactDOM.hydrate\n    )[0]\n\n    domReady(() => {\n      renderer(\n        <NewRoot />,\n        typeof window !== `undefined`\n          ? document.getElementById(`___gatsby`)\n          : void 0,\n        () => {\n          apiRunner(`onInitialClientRender`)\n        }\n      )\n    })\n  })\n})\n"]},"metadata":{},"sourceType":"module"}