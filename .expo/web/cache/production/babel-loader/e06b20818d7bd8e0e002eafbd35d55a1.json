{"ast":null,"code":"import createPrefixer from'inline-style-prefixer/static/createPrefixer';import staticData from\"./static\";var prefixAll=createPrefixer(staticData);export default prefixAll;export var prefixInlineStyles=function prefixInlineStyles(style){var prefixedStyles=prefixAll(style);Object.keys(prefixedStyles).forEach(function(prop){var value=prefixedStyles[prop];if(Array.isArray(value)){prefixedStyles[prop]=value[value.length-1];}});return prefixedStyles;};","map":{"version":3,"sources":["C:/Users/arnol/code/entroprise/node_modules/react-web-gifted-chat/node_modules/react-native-web/dist/modules/prefixStyles/index.js"],"names":["createPrefixer","staticData","prefixAll","prefixInlineStyles","style","prefixedStyles","Object","keys","forEach","prop","value","Array","isArray","length"],"mappings":"AASA,MAAOA,CAAAA,cAAP,KAA2B,6CAA3B,CACA,MAAOC,CAAAA,UAAP,gBAEA,GAAIC,CAAAA,SAAS,CAAGF,cAAc,CAACC,UAAD,CAA9B,CAEA,cAAeC,CAAAA,SAAf,CAEA,MAAO,IAAIC,CAAAA,kBAAkB,CAAG,QAASA,CAAAA,kBAAT,CAA4BC,KAA5B,CAAmC,CACjE,GAAIC,CAAAA,cAAc,CAAGH,SAAS,CAACE,KAAD,CAA9B,CAIAE,MAAM,CAACC,IAAP,CAAYF,cAAZ,EAA4BG,OAA5B,CAAoC,SAAUC,IAAV,CAAgB,CAClD,GAAIC,CAAAA,KAAK,CAAGL,cAAc,CAACI,IAAD,CAA1B,CACA,GAAIE,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAJ,CAA0B,CACxBL,cAAc,CAACI,IAAD,CAAd,CAAuBC,KAAK,CAACA,KAAK,CAACG,MAAN,CAAe,CAAhB,CAA5B,CACD,CACF,CALD,EAOA,MAAOR,CAAAA,cAAP,CACD,CAbM","sourcesContent":["/**\n * Copyright (c) 2015-present, Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nimport createPrefixer from 'inline-style-prefixer/static/createPrefixer';\nimport staticData from './static';\n\nvar prefixAll = createPrefixer(staticData);\n\nexport default prefixAll;\n\nexport var prefixInlineStyles = function prefixInlineStyles(style) {\n  var prefixedStyles = prefixAll(style);\n\n  // React@15 removed undocumented support for fallback values in\n  // inline-styles. Revert array values to the standard CSS value\n  Object.keys(prefixedStyles).forEach(function (prop) {\n    var value = prefixedStyles[prop];\n    if (Array.isArray(value)) {\n      prefixedStyles[prop] = value[value.length - 1];\n    }\n  });\n\n  return prefixedStyles;\n};"]},"metadata":{},"sourceType":"module"}