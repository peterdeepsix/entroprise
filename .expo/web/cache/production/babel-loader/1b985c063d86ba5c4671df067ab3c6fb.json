{"ast":null,"code":"'use strict';import _extends from\"@babel/runtime/helpers/extends\";function _objectWithoutProperties(obj,keys){var target={};for(var i in obj){if(keys.indexOf(i)>=0)continue;if(!Object.prototype.hasOwnProperty.call(obj,i))continue;target[i]=obj[i];}return target;}import ListViewDataSource from\"./ListViewDataSource\";import Platform from\"../../../exports/Platform\";import React from'react';import PropTypes from'prop-types';import findNodeHandle from\"../../../exports/findNodeHandle\";import NativeModules from\"../../../exports/NativeModules\";import ScrollView from\"../../../exports/ScrollView\";import ScrollResponder from\"../../../modules/ScrollResponder\";import StaticRenderer from\"../StaticRenderer\";import TimerMixin from'react-timer-mixin';import View from\"../../../exports/View\";import cloneReferencedElement from\"./cloneReferencedElement\";import createReactClass from'create-react-class';import isEmpty from\"../isEmpty\";var merge=function merge(){for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}return Object.assign.apply(Object,[{}].concat(args));};var RCTScrollViewManager=NativeModules.ScrollViewManager;var DEFAULT_PAGE_SIZE=1;var DEFAULT_INITIAL_ROWS=10;var DEFAULT_SCROLL_RENDER_AHEAD=1000;var DEFAULT_END_REACHED_THRESHOLD=1000;var DEFAULT_SCROLL_CALLBACK_THROTTLE=50;var ListView=createReactClass({displayName:'ListView',_childFrames:[],_sentEndForContentLength:null,_scrollComponent:null,_prevRenderedRowsCount:0,_visibleRows:{},scrollProperties:{},mixins:[ScrollResponder.Mixin,TimerMixin],statics:{DataSource:ListViewDataSource},propTypes:_extends({},ScrollView.propTypes,{dataSource:PropTypes.instanceOf(ListViewDataSource).isRequired,renderSeparator:PropTypes.func,renderRow:PropTypes.func.isRequired,initialListSize:PropTypes.number.isRequired,onEndReached:PropTypes.func,onEndReachedThreshold:PropTypes.number.isRequired,pageSize:PropTypes.number.isRequired,renderFooter:PropTypes.func,renderHeader:PropTypes.func,renderSectionHeader:PropTypes.func,renderScrollComponent:PropTypes.func.isRequired,scrollRenderAheadDistance:PropTypes.number.isRequired,onChangeVisibleRows:PropTypes.func,removeClippedSubviews:PropTypes.bool,stickySectionHeadersEnabled:PropTypes.bool,stickyHeaderIndices:PropTypes.arrayOf(PropTypes.number).isRequired,enableEmptySections:PropTypes.bool}),getMetrics:function getMetrics(){return{contentLength:this.scrollProperties.contentLength,totalRows:this.props.enableEmptySections?this.props.dataSource.getRowAndSectionCount():this.props.dataSource.getRowCount(),renderedRows:this.state.curRenderedRowsCount,visibleRows:Object.keys(this._visibleRows).length};},getScrollResponder:function getScrollResponder(){if(this._scrollComponent&&this._scrollComponent.getScrollResponder){return this._scrollComponent.getScrollResponder();}},getScrollableNode:function getScrollableNode(){if(this._scrollComponent&&this._scrollComponent.getScrollableNode){return this._scrollComponent.getScrollableNode();}else{return findNodeHandle(this._scrollComponent);}},scrollTo:function scrollTo(){if(this._scrollComponent&&this._scrollComponent.scrollTo){var _scrollComponent;(_scrollComponent=this._scrollComponent).scrollTo.apply(_scrollComponent,arguments);}},scrollToEnd:function scrollToEnd(options){if(this._scrollComponent){if(this._scrollComponent.scrollToEnd){this._scrollComponent.scrollToEnd(options);}else{console.warn('The scroll component used by the ListView does not support '+'scrollToEnd. Check the renderScrollComponent prop of your ListView.');}}},flashScrollIndicators:function flashScrollIndicators(){if(this._scrollComponent&&this._scrollComponent.flashScrollIndicators){this._scrollComponent.flashScrollIndicators();}},setNativeProps:function setNativeProps(props){if(this._scrollComponent){this._scrollComponent.setNativeProps(props);}},getDefaultProps:function getDefaultProps(){return{initialListSize:DEFAULT_INITIAL_ROWS,pageSize:DEFAULT_PAGE_SIZE,renderScrollComponent:function renderScrollComponent(props){return React.createElement(ScrollView,props);},scrollRenderAheadDistance:DEFAULT_SCROLL_RENDER_AHEAD,onEndReachedThreshold:DEFAULT_END_REACHED_THRESHOLD,stickySectionHeadersEnabled:Platform.OS==='ios'||Platform.OS==='web',stickyHeaderIndices:[]};},getInitialState:function getInitialState(){return{curRenderedRowsCount:this.props.initialListSize,highlightedRow:{}};},getInnerViewNode:function getInnerViewNode(){return this._scrollComponent.getInnerViewNode();},UNSAFE_componentWillMount:function UNSAFE_componentWillMount(){this.scrollProperties={visibleLength:null,contentLength:null,offset:0};this._childFrames=[];this._visibleRows={};this._prevRenderedRowsCount=0;this._sentEndForContentLength=null;},componentDidMount:function componentDidMount(){var _this=this;this.requestAnimationFrame(function(){_this._measureAndUpdateScrollProps();});},UNSAFE_componentWillReceiveProps:function UNSAFE_componentWillReceiveProps(nextProps){var _this2=this;if(this.props.dataSource!==nextProps.dataSource||this.props.initialListSize!==nextProps.initialListSize){this.setState(function(state,props){_this2._prevRenderedRowsCount=0;return{curRenderedRowsCount:Math.min(Math.max(state.curRenderedRowsCount,props.initialListSize),props.enableEmptySections?props.dataSource.getRowAndSectionCount():props.dataSource.getRowCount())};},function(){return _this2._renderMoreRowsIfNeeded();});}},componentDidUpdate:function componentDidUpdate(){var _this3=this;this.requestAnimationFrame(function(){_this3._measureAndUpdateScrollProps();});},_onRowHighlighted:function _onRowHighlighted(sectionID,rowID){this.setState({highlightedRow:{sectionID:sectionID,rowID:rowID}});},render:function render(){var bodyComponents=[];var dataSource=this.props.dataSource;var allRowIDs=dataSource.rowIdentities;var rowCount=0;var stickySectionHeaderIndices=[];var renderSectionHeader=this.props.renderSectionHeader;var header=this.props.renderHeader&&this.props.renderHeader();var footer=this.props.renderFooter&&this.props.renderFooter();var totalIndex=header?1:0;for(var sectionIdx=0;sectionIdx<allRowIDs.length;sectionIdx++){var sectionID=dataSource.sectionIdentities[sectionIdx];var rowIDs=allRowIDs[sectionIdx];if(rowIDs.length===0){if(this.props.enableEmptySections===undefined){var warning=require('fbjs/lib/warning');warning(false,'In next release empty section headers will be rendered.'+\" In this release you can use 'enableEmptySections' flag to render empty section headers.\");continue;}else{var invariant=require('fbjs/lib/invariant');invariant(this.props.enableEmptySections,\"In next release 'enableEmptySections' flag will be deprecated, empty section headers will always be rendered.\"+' If empty section headers are not desirable their indices should be excluded from sectionIDs object.'+\" In this release 'enableEmptySections' may only have value 'true' to allow empty section headers rendering.\");}}if(renderSectionHeader){var element=renderSectionHeader(dataSource.getSectionHeaderData(sectionIdx),sectionID);if(element){bodyComponents.push(React.cloneElement(element,{key:'s_'+sectionID}));if(this.props.stickySectionHeadersEnabled){stickySectionHeaderIndices.push(totalIndex);}totalIndex++;}}for(var rowIdx=0;rowIdx<rowIDs.length;rowIdx++){var rowID=rowIDs[rowIdx];var comboID=sectionID+'_'+rowID;var shouldUpdateRow=rowCount>=this._prevRenderedRowsCount&&dataSource.rowShouldUpdate(sectionIdx,rowIdx);var row=React.createElement(StaticRenderer,{key:'r_'+comboID,shouldUpdate:!!shouldUpdateRow,render:this.props.renderRow.bind(null,dataSource.getRowData(sectionIdx,rowIdx),sectionID,rowID,this._onRowHighlighted)});bodyComponents.push(row);totalIndex++;if(this.props.renderSeparator&&(rowIdx!==rowIDs.length-1||sectionIdx===allRowIDs.length-1)){var adjacentRowHighlighted=this.state.highlightedRow.sectionID===sectionID&&(this.state.highlightedRow.rowID===rowID||this.state.highlightedRow.rowID===rowIDs[rowIdx+1]);var separator=this.props.renderSeparator(sectionID,rowID,adjacentRowHighlighted);if(separator){bodyComponents.push(React.createElement(View,{key:'s_'+comboID},separator));totalIndex++;}}if(++rowCount===this.state.curRenderedRowsCount){break;}}if(rowCount>=this.state.curRenderedRowsCount){break;}}var _props=this.props,renderScrollComponent=_props.renderScrollComponent,props=_objectWithoutProperties(_props,['renderScrollComponent']);if(!props.scrollEventThrottle){props.scrollEventThrottle=DEFAULT_SCROLL_CALLBACK_THROTTLE;}if(props.removeClippedSubviews===undefined){props.removeClippedSubviews=true;}_extends(props,{onScroll:this._onScroll,stickyHeaderIndices:this.props.stickyHeaderIndices.concat(stickySectionHeaderIndices),onKeyboardWillShow:undefined,onKeyboardWillHide:undefined,onKeyboardDidShow:undefined,onKeyboardDidHide:undefined});return cloneReferencedElement(renderScrollComponent(props),{ref:this._setScrollComponentRef,onContentSizeChange:this._onContentSizeChange,onLayout:this._onLayout,DEPRECATED_sendUpdatedChildFrames:typeof props.onChangeVisibleRows!==undefined},header,bodyComponents,footer);},_measureAndUpdateScrollProps:function _measureAndUpdateScrollProps(){var scrollComponent=this.getScrollResponder();if(!scrollComponent||!scrollComponent.getInnerViewNode){return;}RCTScrollViewManager&&RCTScrollViewManager.calculateChildFrames&&RCTScrollViewManager.calculateChildFrames(findNodeHandle(scrollComponent),this._updateVisibleRows);},_setScrollComponentRef:function _setScrollComponentRef(scrollComponent){this._scrollComponent=scrollComponent;},_onContentSizeChange:function _onContentSizeChange(width,height){var contentLength=!this.props.horizontal?height:width;if(contentLength!==this.scrollProperties.contentLength){this.scrollProperties.contentLength=contentLength;this._updateVisibleRows();this._renderMoreRowsIfNeeded();}this.props.onContentSizeChange&&this.props.onContentSizeChange(width,height);},_onLayout:function _onLayout(event){var _event$nativeEvent$la=event.nativeEvent.layout,width=_event$nativeEvent$la.width,height=_event$nativeEvent$la.height;var visibleLength=!this.props.horizontal?height:width;if(visibleLength!==this.scrollProperties.visibleLength){this.scrollProperties.visibleLength=visibleLength;this._updateVisibleRows();this._renderMoreRowsIfNeeded();}this.props.onLayout&&this.props.onLayout(event);},_maybeCallOnEndReached:function _maybeCallOnEndReached(event){if(this.props.onEndReached&&this.scrollProperties.contentLength!==this._sentEndForContentLength&&this._getDistanceFromEnd(this.scrollProperties)<this.props.onEndReachedThreshold&&this.state.curRenderedRowsCount===(this.props.enableEmptySections?this.props.dataSource.getRowAndSectionCount():this.props.dataSource.getRowCount())){this._sentEndForContentLength=this.scrollProperties.contentLength;this.props.onEndReached(event);return true;}return false;},_renderMoreRowsIfNeeded:function _renderMoreRowsIfNeeded(){if(this.scrollProperties.contentLength===null||this.scrollProperties.visibleLength===null||this.state.curRenderedRowsCount===(this.props.enableEmptySections?this.props.dataSource.getRowAndSectionCount():this.props.dataSource.getRowCount())){this._maybeCallOnEndReached();return;}var distanceFromEnd=this._getDistanceFromEnd(this.scrollProperties);if(distanceFromEnd<this.props.scrollRenderAheadDistance){this._pageInNewRows();}},_pageInNewRows:function _pageInNewRows(){var _this4=this;this.setState(function(state,props){var rowsToRender=Math.min(state.curRenderedRowsCount+props.pageSize,props.enableEmptySections?props.dataSource.getRowAndSectionCount():props.dataSource.getRowCount());_this4._prevRenderedRowsCount=state.curRenderedRowsCount;return{curRenderedRowsCount:rowsToRender};},function(){_this4._measureAndUpdateScrollProps();_this4._prevRenderedRowsCount=_this4.state.curRenderedRowsCount;});},_getDistanceFromEnd:function _getDistanceFromEnd(scrollProperties){return scrollProperties.contentLength-scrollProperties.visibleLength-scrollProperties.offset;},_updateVisibleRows:function _updateVisibleRows(updatedFrames){var _this5=this;if(!this.props.onChangeVisibleRows){return;}if(updatedFrames){updatedFrames.forEach(function(newFrame){_this5._childFrames[newFrame.index]=merge(newFrame);});}var isVertical=!this.props.horizontal;var dataSource=this.props.dataSource;var visibleMin=this.scrollProperties.offset;var visibleMax=visibleMin+this.scrollProperties.visibleLength;var allRowIDs=dataSource.rowIdentities;var header=this.props.renderHeader&&this.props.renderHeader();var totalIndex=header?1:0;var visibilityChanged=false;var changedRows={};for(var sectionIdx=0;sectionIdx<allRowIDs.length;sectionIdx++){var rowIDs=allRowIDs[sectionIdx];if(rowIDs.length===0){continue;}var sectionID=dataSource.sectionIdentities[sectionIdx];if(this.props.renderSectionHeader){totalIndex++;}var visibleSection=this._visibleRows[sectionID];if(!visibleSection){visibleSection={};}for(var rowIdx=0;rowIdx<rowIDs.length;rowIdx++){var rowID=rowIDs[rowIdx];var frame=this._childFrames[totalIndex];totalIndex++;if(this.props.renderSeparator&&(rowIdx!==rowIDs.length-1||sectionIdx===allRowIDs.length-1)){totalIndex++;}if(!frame){break;}var rowVisible=visibleSection[rowID];var min=isVertical?frame.y:frame.x;var max=min+(isVertical?frame.height:frame.width);if(!min&&!max||min===max){break;}if(min>visibleMax||max<visibleMin){if(rowVisible){visibilityChanged=true;delete visibleSection[rowID];if(!changedRows[sectionID]){changedRows[sectionID]={};}changedRows[sectionID][rowID]=false;}}else if(!rowVisible){visibilityChanged=true;visibleSection[rowID]=true;if(!changedRows[sectionID]){changedRows[sectionID]={};}changedRows[sectionID][rowID]=true;}}if(!isEmpty(visibleSection)){this._visibleRows[sectionID]=visibleSection;}else if(this._visibleRows[sectionID]){delete this._visibleRows[sectionID];}}visibilityChanged&&this.props.onChangeVisibleRows(this._visibleRows,changedRows);},_onScroll:function _onScroll(e){var isVertical=!this.props.horizontal;this.scrollProperties.visibleLength=e.nativeEvent.layoutMeasurement[isVertical?'height':'width'];this.scrollProperties.contentLength=e.nativeEvent.contentSize[isVertical?'height':'width'];this.scrollProperties.offset=e.nativeEvent.contentOffset[isVertical?'y':'x'];this._updateVisibleRows(e.nativeEvent.updatedChildFrames);if(!this._maybeCallOnEndReached(e)){this._renderMoreRowsIfNeeded();}if(this.props.onEndReached&&this._getDistanceFromEnd(this.scrollProperties)>this.props.onEndReachedThreshold){this._sentEndForContentLength=null;}this.props.onScroll&&this.props.onScroll(e);}});export default ListView;","map":{"version":3,"sources":["C:/Users/arnol/code/entroprise/node_modules/react-web-gifted-chat/node_modules/react-native-web/dist/vendor/react-native/ListView/index.js"],"names":["_objectWithoutProperties","obj","keys","target","i","indexOf","Object","prototype","hasOwnProperty","call","ListViewDataSource","Platform","React","PropTypes","findNodeHandle","NativeModules","ScrollView","ScrollResponder","StaticRenderer","TimerMixin","View","cloneReferencedElement","createReactClass","isEmpty","merge","_len","arguments","length","args","Array","_key","assign","apply","concat","RCTScrollViewManager","ScrollViewManager","DEFAULT_PAGE_SIZE","DEFAULT_INITIAL_ROWS","DEFAULT_SCROLL_RENDER_AHEAD","DEFAULT_END_REACHED_THRESHOLD","DEFAULT_SCROLL_CALLBACK_THROTTLE","ListView","displayName","_childFrames","_sentEndForContentLength","_scrollComponent","_prevRenderedRowsCount","_visibleRows","scrollProperties","mixins","Mixin","statics","DataSource","propTypes","dataSource","instanceOf","isRequired","renderSeparator","func","renderRow","initialListSize","number","onEndReached","onEndReachedThreshold","pageSize","renderFooter","renderHeader","renderSectionHeader","renderScrollComponent","scrollRenderAheadDistance","onChangeVisibleRows","removeClippedSubviews","bool","stickySectionHeadersEnabled","stickyHeaderIndices","arrayOf","enableEmptySections","getMetrics","contentLength","totalRows","props","getRowAndSectionCount","getRowCount","renderedRows","state","curRenderedRowsCount","visibleRows","getScrollResponder","getScrollableNode","scrollTo","scrollToEnd","options","console","warn","flashScrollIndicators","setNativeProps","getDefaultProps","createElement","OS","getInitialState","highlightedRow","getInnerViewNode","UNSAFE_componentWillMount","visibleLength","offset","componentDidMount","_this","requestAnimationFrame","_measureAndUpdateScrollProps","UNSAFE_componentWillReceiveProps","nextProps","_this2","setState","Math","min","max","_renderMoreRowsIfNeeded","componentDidUpdate","_this3","_onRowHighlighted","sectionID","rowID","render","bodyComponents","allRowIDs","rowIdentities","rowCount","stickySectionHeaderIndices","header","footer","totalIndex","sectionIdx","sectionIdentities","rowIDs","undefined","warning","require","invariant","element","getSectionHeaderData","push","cloneElement","key","rowIdx","comboID","shouldUpdateRow","rowShouldUpdate","row","shouldUpdate","bind","getRowData","adjacentRowHighlighted","separator","_props","scrollEventThrottle","onScroll","_onScroll","onKeyboardWillShow","onKeyboardWillHide","onKeyboardDidShow","onKeyboardDidHide","ref","_setScrollComponentRef","onContentSizeChange","_onContentSizeChange","onLayout","_onLayout","DEPRECATED_sendUpdatedChildFrames","scrollComponent","calculateChildFrames","_updateVisibleRows","width","height","horizontal","event","_event$nativeEvent$la","nativeEvent","layout","_maybeCallOnEndReached","_getDistanceFromEnd","distanceFromEnd","_pageInNewRows","_this4","rowsToRender","updatedFrames","_this5","forEach","newFrame","index","isVertical","visibleMin","visibleMax","visibilityChanged","changedRows","visibleSection","frame","rowVisible","y","x","e","layoutMeasurement","contentSize","contentOffset","updatedChildFrames"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule ListView\n * \n * @format\n */\n'use strict';\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nimport ListViewDataSource from './ListViewDataSource';\nimport Platform from '../../../exports/Platform';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport findNodeHandle from '../../../exports/findNodeHandle';\nimport NativeModules from '../../../exports/NativeModules';\nimport ScrollView from '../../../exports/ScrollView';\nimport ScrollResponder from '../../../modules/ScrollResponder';\nimport StaticRenderer from '../StaticRenderer';\nimport TimerMixin from 'react-timer-mixin';\nimport View from '../../../exports/View';\n\nimport cloneReferencedElement from './cloneReferencedElement';\nimport createReactClass from 'create-react-class';\nimport isEmpty from '../isEmpty';\n\nvar merge = function merge() {\n  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return Object.assign.apply(Object, [{}].concat(args));\n};\nvar RCTScrollViewManager = NativeModules.ScrollViewManager;\n\nvar DEFAULT_PAGE_SIZE = 1;\nvar DEFAULT_INITIAL_ROWS = 10;\nvar DEFAULT_SCROLL_RENDER_AHEAD = 1000;\nvar DEFAULT_END_REACHED_THRESHOLD = 1000;\nvar DEFAULT_SCROLL_CALLBACK_THROTTLE = 50;\n\n/**\n * DEPRECATED - use one of the new list components, such as [`FlatList`](docs/flatlist.html)\n * or [`SectionList`](docs/sectionlist.html) for bounded memory use, fewer bugs,\n * better performance, an easier to use API, and more features. Check out this\n * [blog post](https://facebook.github.io/react-native/blog/2017/03/13/better-list-views.html)\n * for more details.\n *\n * ListView - A core component designed for efficient display of vertically\n * scrolling lists of changing data. The minimal API is to create a\n * [`ListView.DataSource`](docs/listviewdatasource.html), populate it with a simple\n * array of data blobs, and instantiate a `ListView` component with that data\n * source and a `renderRow` callback which takes a blob from the data array and\n * returns a renderable component.\n *\n * Minimal example:\n *\n * ```\n * class MyComponent extends Component {\n *   constructor() {\n *     super();\n *     const ds = new ListView.DataSource({rowHasChanged: (r1, r2) => r1 !== r2});\n *     this.state = {\n *       dataSource: ds.cloneWithRows(['row 1', 'row 2']),\n *     };\n *   }\n *\n *   render() {\n *     return (\n *       <ListView\n *         dataSource={this.state.dataSource}\n *         renderRow={(rowData) => <Text>{rowData}</Text>}\n *       />\n *     );\n *   }\n * }\n * ```\n *\n * ListView also supports more advanced features, including sections with sticky\n * section headers, header and footer support, callbacks on reaching the end of\n * the available data (`onEndReached`) and on the set of rows that are visible\n * in the device viewport change (`onChangeVisibleRows`), and several\n * performance optimizations.\n *\n * There are a few performance operations designed to make ListView scroll\n * smoothly while dynamically loading potentially very large (or conceptually\n * infinite) data sets:\n *\n *  * Only re-render changed rows - the rowHasChanged function provided to the\n *    data source tells the ListView if it needs to re-render a row because the\n *    source data has changed - see ListViewDataSource for more details.\n *\n *  * Rate-limited row rendering - By default, only one row is rendered per\n *    event-loop (customizable with the `pageSize` prop). This breaks up the\n *    work into smaller chunks to reduce the chance of dropping frames while\n *    rendering rows.\n */\n\nvar ListView = createReactClass({\n  displayName: 'ListView',\n  _childFrames: [],\n  _sentEndForContentLength: null,\n  _scrollComponent: null,\n  _prevRenderedRowsCount: 0,\n  _visibleRows: {},\n  scrollProperties: {},\n\n  mixins: [ScrollResponder.Mixin, TimerMixin],\n\n  statics: {\n    DataSource: ListViewDataSource\n  },\n\n  /**\n   * You must provide a renderRow function. If you omit any of the other render\n   * functions, ListView will simply skip rendering them.\n   *\n   * - renderRow(rowData, sectionID, rowID, highlightRow);\n   * - renderSectionHeader(sectionData, sectionID);\n   */\n  propTypes: Object.assign({}, ScrollView.propTypes, {\n    /**\n     * An instance of [ListView.DataSource](docs/listviewdatasource.html) to use\n     */\n    dataSource: PropTypes.instanceOf(ListViewDataSource).isRequired,\n    /**\n     * (sectionID, rowID, adjacentRowHighlighted) => renderable\n     *\n     * If provided, a renderable component to be rendered as the separator\n     * below each row but not the last row if there is a section header below.\n     * Take a sectionID and rowID of the row above and whether its adjacent row\n     * is highlighted.\n     */\n    renderSeparator: PropTypes.func,\n    /**\n     * (rowData, sectionID, rowID, highlightRow) => renderable\n     *\n     * Takes a data entry from the data source and its ids and should return\n     * a renderable component to be rendered as the row. By default the data\n     * is exactly what was put into the data source, but it's also possible to\n     * provide custom extractors. ListView can be notified when a row is\n     * being highlighted by calling `highlightRow(sectionID, rowID)`. This\n     * sets a boolean value of adjacentRowHighlighted in renderSeparator, allowing you\n     * to control the separators above and below the highlighted row. The highlighted\n     * state of a row can be reset by calling highlightRow(null).\n     */\n    renderRow: PropTypes.func.isRequired,\n    /**\n     * How many rows to render on initial component mount. Use this to make\n     * it so that the first screen worth of data appears at one time instead of\n     * over the course of multiple frames.\n     */\n    initialListSize: PropTypes.number.isRequired,\n    /**\n     * Called when all rows have been rendered and the list has been scrolled\n     * to within onEndReachedThreshold of the bottom. The native scroll\n     * event is provided.\n     */\n    onEndReached: PropTypes.func,\n    /**\n     * Threshold in pixels (virtual, not physical) for calling onEndReached.\n     */\n    onEndReachedThreshold: PropTypes.number.isRequired,\n    /**\n     * Number of rows to render per event loop. Note: if your 'rows' are actually\n     * cells, i.e. they don't span the full width of your view (as in the\n     * ListViewGridLayoutExample), you should set the pageSize to be a multiple\n     * of the number of cells per row, otherwise you're likely to see gaps at\n     * the edge of the ListView as new pages are loaded.\n     */\n    pageSize: PropTypes.number.isRequired,\n    /**\n     * () => renderable\n     *\n     * The header and footer are always rendered (if these props are provided)\n     * on every render pass. If they are expensive to re-render, wrap them\n     * in StaticContainer or other mechanism as appropriate. Footer is always\n     * at the bottom of the list, and header at the top, on every render pass.\n     * In a horizontal ListView, the header is rendered on the left and the\n     * footer on the right.\n     */\n    renderFooter: PropTypes.func,\n    renderHeader: PropTypes.func,\n    /**\n     * (sectionData, sectionID) => renderable\n     *\n     * If provided, a header is rendered for this section.\n     */\n    renderSectionHeader: PropTypes.func,\n    /**\n     * (props) => renderable\n     *\n     * A function that returns the scrollable component in which the list rows\n     * are rendered. Defaults to returning a ScrollView with the given props.\n     */\n    renderScrollComponent: PropTypes.func.isRequired,\n    /**\n     * How early to start rendering rows before they come on screen, in\n     * pixels.\n     */\n    scrollRenderAheadDistance: PropTypes.number.isRequired,\n    /**\n     * (visibleRows, changedRows) => void\n     *\n     * Called when the set of visible rows changes. `visibleRows` maps\n     * { sectionID: { rowID: true }} for all the visible rows, and\n     * `changedRows` maps { sectionID: { rowID: true | false }} for the rows\n     * that have changed their visibility, with true indicating visible, and\n     * false indicating the view has moved out of view.\n     */\n    onChangeVisibleRows: PropTypes.func,\n    /**\n     * A performance optimization for improving scroll perf of\n     * large lists, used in conjunction with overflow: 'hidden' on the row\n     * containers. This is enabled by default.\n     */\n    removeClippedSubviews: PropTypes.bool,\n    /**\n     * Makes the sections headers sticky. The sticky behavior means that it\n     * will scroll with the content at the top of the section until it reaches\n     * the top of the screen, at which point it will stick to the top until it\n     * is pushed off the screen by the next section header. This property is\n     * not supported in conjunction with `horizontal={true}`. Only enabled by\n     * default on iOS because of typical platform standards.\n     */\n    stickySectionHeadersEnabled: PropTypes.bool,\n    /**\n     * An array of child indices determining which children get docked to the\n     * top of the screen when scrolling. For example, passing\n     * `stickyHeaderIndices={[0]}` will cause the first child to be fixed to the\n     * top of the scroll view. This property is not supported in conjunction\n     * with `horizontal={true}`.\n     */\n    stickyHeaderIndices: PropTypes.arrayOf(PropTypes.number).isRequired,\n    /**\n     * Flag indicating whether empty section headers should be rendered. In the future release\n     * empty section headers will be rendered by default, and the flag will be deprecated.\n     * If empty sections are not desired to be rendered their indices should be excluded from sectionID object.\n     */\n    enableEmptySections: PropTypes.bool\n  }),\n\n  /**\n   * Exports some data, e.g. for perf investigations or analytics.\n   */\n  getMetrics: function getMetrics() {\n    return {\n      contentLength: this.scrollProperties.contentLength,\n      totalRows: this.props.enableEmptySections ? this.props.dataSource.getRowAndSectionCount() : this.props.dataSource.getRowCount(),\n      renderedRows: this.state.curRenderedRowsCount,\n      visibleRows: Object.keys(this._visibleRows).length\n    };\n  },\n\n  /**\n   * Provides a handle to the underlying scroll responder.\n   * Note that `this._scrollComponent` might not be a `ScrollView`, so we\n   * need to check that it responds to `getScrollResponder` before calling it.\n   */\n  getScrollResponder: function getScrollResponder() {\n    if (this._scrollComponent && this._scrollComponent.getScrollResponder) {\n      return this._scrollComponent.getScrollResponder();\n    }\n  },\n\n  getScrollableNode: function getScrollableNode() {\n    if (this._scrollComponent && this._scrollComponent.getScrollableNode) {\n      return this._scrollComponent.getScrollableNode();\n    } else {\n      return findNodeHandle(this._scrollComponent);\n    }\n  },\n\n  /**\n   * Scrolls to a given x, y offset, either immediately or with a smooth animation.\n   *\n   * See `ScrollView#scrollTo`.\n   */\n  scrollTo: function scrollTo() {\n    if (this._scrollComponent && this._scrollComponent.scrollTo) {\n      var _scrollComponent;\n\n      (_scrollComponent = this._scrollComponent).scrollTo.apply(_scrollComponent, arguments);\n    }\n  },\n\n  /**\n   * If this is a vertical ListView scrolls to the bottom.\n   * If this is a horizontal ListView scrolls to the right.\n   *\n   * Use `scrollToEnd({animated: true})` for smooth animated scrolling,\n   * `scrollToEnd({animated: false})` for immediate scrolling.\n   * If no options are passed, `animated` defaults to true.\n   *\n   * See `ScrollView#scrollToEnd`.\n   */\n  scrollToEnd: function scrollToEnd(options) {\n    if (this._scrollComponent) {\n      if (this._scrollComponent.scrollToEnd) {\n        this._scrollComponent.scrollToEnd(options);\n      } else {\n        console.warn('The scroll component used by the ListView does not support ' + 'scrollToEnd. Check the renderScrollComponent prop of your ListView.');\n      }\n    }\n  },\n\n  /**\n   * Displays the scroll indicators momentarily.\n   *\n   * @platform ios\n   */\n  flashScrollIndicators: function flashScrollIndicators() {\n    if (this._scrollComponent && this._scrollComponent.flashScrollIndicators) {\n      this._scrollComponent.flashScrollIndicators();\n    }\n  },\n\n  setNativeProps: function setNativeProps(props) {\n    if (this._scrollComponent) {\n      this._scrollComponent.setNativeProps(props);\n    }\n  },\n\n  /**\n   * React life cycle hooks.\n   */\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      initialListSize: DEFAULT_INITIAL_ROWS,\n      pageSize: DEFAULT_PAGE_SIZE,\n      renderScrollComponent: function renderScrollComponent(props) {\n        return React.createElement(ScrollView, props);\n      },\n      scrollRenderAheadDistance: DEFAULT_SCROLL_RENDER_AHEAD,\n      onEndReachedThreshold: DEFAULT_END_REACHED_THRESHOLD,\n      stickySectionHeadersEnabled: Platform.OS === 'ios' || Platform.OS === 'web',\n      stickyHeaderIndices: []\n    };\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      curRenderedRowsCount: this.props.initialListSize,\n      highlightedRow: {}\n    };\n  },\n\n  getInnerViewNode: function getInnerViewNode() {\n    return this._scrollComponent.getInnerViewNode();\n  },\n\n  UNSAFE_componentWillMount: function UNSAFE_componentWillMount() {\n    // this data should never trigger a render pass, so don't put in state\n    this.scrollProperties = {\n      visibleLength: null,\n      contentLength: null,\n      offset: 0\n    };\n    this._childFrames = [];\n    this._visibleRows = {};\n    this._prevRenderedRowsCount = 0;\n    this._sentEndForContentLength = null;\n  },\n\n  componentDidMount: function componentDidMount() {\n    var _this = this;\n\n    // do this in animation frame until componentDidMount actually runs after\n    // the component is laid out\n    this.requestAnimationFrame(function () {\n      _this._measureAndUpdateScrollProps();\n    });\n  },\n\n  UNSAFE_componentWillReceiveProps: function UNSAFE_componentWillReceiveProps(nextProps) {\n    var _this2 = this;\n\n    if (this.props.dataSource !== nextProps.dataSource || this.props.initialListSize !== nextProps.initialListSize) {\n      this.setState(function (state, props) {\n        _this2._prevRenderedRowsCount = 0;\n        return {\n          curRenderedRowsCount: Math.min(Math.max(state.curRenderedRowsCount, props.initialListSize), props.enableEmptySections ? props.dataSource.getRowAndSectionCount() : props.dataSource.getRowCount())\n        };\n      }, function () {\n        return _this2._renderMoreRowsIfNeeded();\n      });\n    }\n  },\n\n  componentDidUpdate: function componentDidUpdate() {\n    var _this3 = this;\n\n    this.requestAnimationFrame(function () {\n      _this3._measureAndUpdateScrollProps();\n    });\n  },\n\n  _onRowHighlighted: function _onRowHighlighted(sectionID, rowID) {\n    this.setState({ highlightedRow: { sectionID: sectionID, rowID: rowID } });\n  },\n\n  render: function render() {\n    var bodyComponents = [];\n\n    var dataSource = this.props.dataSource;\n    var allRowIDs = dataSource.rowIdentities;\n    var rowCount = 0;\n    var stickySectionHeaderIndices = [];\n\n    var renderSectionHeader = this.props.renderSectionHeader;\n\n\n    var header = this.props.renderHeader && this.props.renderHeader();\n    var footer = this.props.renderFooter && this.props.renderFooter();\n    var totalIndex = header ? 1 : 0;\n\n    for (var sectionIdx = 0; sectionIdx < allRowIDs.length; sectionIdx++) {\n      var sectionID = dataSource.sectionIdentities[sectionIdx];\n      var rowIDs = allRowIDs[sectionIdx];\n      if (rowIDs.length === 0) {\n        if (this.props.enableEmptySections === undefined) {\n          /* $FlowFixMe(>=0.54.0 site=react_native_oss) This comment suppresses\n           * an error found when Flow v0.54 was deployed. To see the error\n           * delete this comment and run Flow. */\n          var warning = require('fbjs/lib/warning');\n          warning(false, 'In next release empty section headers will be rendered.' + \" In this release you can use 'enableEmptySections' flag to render empty section headers.\");\n          continue;\n        } else {\n          var invariant = require('fbjs/lib/invariant');\n          invariant(this.props.enableEmptySections, \"In next release 'enableEmptySections' flag will be deprecated, empty section headers will always be rendered.\" + ' If empty section headers are not desirable their indices should be excluded from sectionIDs object.' + \" In this release 'enableEmptySections' may only have value 'true' to allow empty section headers rendering.\");\n        }\n      }\n\n      if (renderSectionHeader) {\n        var element = renderSectionHeader(dataSource.getSectionHeaderData(sectionIdx), sectionID);\n        if (element) {\n          bodyComponents.push(React.cloneElement(element, { key: 's_' + sectionID }));\n          if (this.props.stickySectionHeadersEnabled) {\n            stickySectionHeaderIndices.push(totalIndex);\n          }\n          totalIndex++;\n        }\n      }\n\n      for (var rowIdx = 0; rowIdx < rowIDs.length; rowIdx++) {\n        var rowID = rowIDs[rowIdx];\n        var comboID = sectionID + '_' + rowID;\n        var shouldUpdateRow = rowCount >= this._prevRenderedRowsCount && dataSource.rowShouldUpdate(sectionIdx, rowIdx);\n        var row = React.createElement(StaticRenderer, {\n          key: 'r_' + comboID,\n          shouldUpdate: !!shouldUpdateRow,\n          render: this.props.renderRow.bind(null, dataSource.getRowData(sectionIdx, rowIdx), sectionID, rowID, this._onRowHighlighted)\n        });\n        bodyComponents.push(row);\n        totalIndex++;\n\n        if (this.props.renderSeparator && (rowIdx !== rowIDs.length - 1 || sectionIdx === allRowIDs.length - 1)) {\n          var adjacentRowHighlighted = this.state.highlightedRow.sectionID === sectionID && (this.state.highlightedRow.rowID === rowID || this.state.highlightedRow.rowID === rowIDs[rowIdx + 1]);\n          var separator = this.props.renderSeparator(sectionID, rowID, adjacentRowHighlighted);\n          if (separator) {\n            bodyComponents.push(React.createElement(\n              View,\n              { key: 's_' + comboID },\n              separator\n            ));\n            totalIndex++;\n          }\n        }\n        if (++rowCount === this.state.curRenderedRowsCount) {\n          break;\n        }\n      }\n      if (rowCount >= this.state.curRenderedRowsCount) {\n        break;\n      }\n    }\n\n    var _props = this.props,\n        renderScrollComponent = _props.renderScrollComponent,\n        props = _objectWithoutProperties(_props, ['renderScrollComponent']);\n\n    if (!props.scrollEventThrottle) {\n      props.scrollEventThrottle = DEFAULT_SCROLL_CALLBACK_THROTTLE;\n    }\n    if (props.removeClippedSubviews === undefined) {\n      props.removeClippedSubviews = true;\n    }\n    Object.assign(props, {\n      onScroll: this._onScroll,\n      stickyHeaderIndices: this.props.stickyHeaderIndices.concat(stickySectionHeaderIndices),\n\n      // Do not pass these events downstream to ScrollView since they will be\n      // registered in ListView's own ScrollResponder.Mixin\n      onKeyboardWillShow: undefined,\n      onKeyboardWillHide: undefined,\n      onKeyboardDidShow: undefined,\n      onKeyboardDidHide: undefined\n    });\n\n    return cloneReferencedElement(renderScrollComponent(props), {\n      ref: this._setScrollComponentRef,\n      onContentSizeChange: this._onContentSizeChange,\n      onLayout: this._onLayout,\n      DEPRECATED_sendUpdatedChildFrames: typeof props.onChangeVisibleRows !== undefined\n    }, header, bodyComponents, footer);\n  },\n\n  /**\n   * Private methods\n   */\n\n  _measureAndUpdateScrollProps: function _measureAndUpdateScrollProps() {\n    var scrollComponent = this.getScrollResponder();\n    if (!scrollComponent || !scrollComponent.getInnerViewNode) {\n      return;\n    }\n\n    // RCTScrollViewManager.calculateChildFrames is not available on\n    // every platform\n    RCTScrollViewManager && RCTScrollViewManager.calculateChildFrames && RCTScrollViewManager.calculateChildFrames(findNodeHandle(scrollComponent), this._updateVisibleRows);\n  },\n\n  _setScrollComponentRef: function _setScrollComponentRef(scrollComponent) {\n    this._scrollComponent = scrollComponent;\n  },\n\n  _onContentSizeChange: function _onContentSizeChange(width, height) {\n    var contentLength = !this.props.horizontal ? height : width;\n    if (contentLength !== this.scrollProperties.contentLength) {\n      this.scrollProperties.contentLength = contentLength;\n      this._updateVisibleRows();\n      this._renderMoreRowsIfNeeded();\n    }\n    this.props.onContentSizeChange && this.props.onContentSizeChange(width, height);\n  },\n\n  _onLayout: function _onLayout(event) {\n    var _event$nativeEvent$la = event.nativeEvent.layout,\n        width = _event$nativeEvent$la.width,\n        height = _event$nativeEvent$la.height;\n\n    var visibleLength = !this.props.horizontal ? height : width;\n    if (visibleLength !== this.scrollProperties.visibleLength) {\n      this.scrollProperties.visibleLength = visibleLength;\n      this._updateVisibleRows();\n      this._renderMoreRowsIfNeeded();\n    }\n    this.props.onLayout && this.props.onLayout(event);\n  },\n\n  _maybeCallOnEndReached: function _maybeCallOnEndReached(event) {\n    if (this.props.onEndReached && this.scrollProperties.contentLength !== this._sentEndForContentLength && this._getDistanceFromEnd(this.scrollProperties) < this.props.onEndReachedThreshold && this.state.curRenderedRowsCount === (this.props.enableEmptySections ? this.props.dataSource.getRowAndSectionCount() : this.props.dataSource.getRowCount())) {\n      this._sentEndForContentLength = this.scrollProperties.contentLength;\n      this.props.onEndReached(event);\n      return true;\n    }\n    return false;\n  },\n\n  _renderMoreRowsIfNeeded: function _renderMoreRowsIfNeeded() {\n    if (this.scrollProperties.contentLength === null || this.scrollProperties.visibleLength === null || this.state.curRenderedRowsCount === (this.props.enableEmptySections ? this.props.dataSource.getRowAndSectionCount() : this.props.dataSource.getRowCount())) {\n      this._maybeCallOnEndReached();\n      return;\n    }\n\n    var distanceFromEnd = this._getDistanceFromEnd(this.scrollProperties);\n    if (distanceFromEnd < this.props.scrollRenderAheadDistance) {\n      this._pageInNewRows();\n    }\n  },\n\n  _pageInNewRows: function _pageInNewRows() {\n    var _this4 = this;\n\n    this.setState(function (state, props) {\n      var rowsToRender = Math.min(state.curRenderedRowsCount + props.pageSize, props.enableEmptySections ? props.dataSource.getRowAndSectionCount() : props.dataSource.getRowCount());\n      _this4._prevRenderedRowsCount = state.curRenderedRowsCount;\n      return {\n        curRenderedRowsCount: rowsToRender\n      };\n    }, function () {\n      _this4._measureAndUpdateScrollProps();\n      _this4._prevRenderedRowsCount = _this4.state.curRenderedRowsCount;\n    });\n  },\n\n  _getDistanceFromEnd: function _getDistanceFromEnd(scrollProperties) {\n    return scrollProperties.contentLength - scrollProperties.visibleLength - scrollProperties.offset;\n  },\n\n  _updateVisibleRows: function _updateVisibleRows(updatedFrames) {\n    var _this5 = this;\n\n    if (!this.props.onChangeVisibleRows) {\n      return; // No need to compute visible rows if there is no callback\n    }\n    if (updatedFrames) {\n      updatedFrames.forEach(function (newFrame) {\n        _this5._childFrames[newFrame.index] = merge(newFrame);\n      });\n    }\n    var isVertical = !this.props.horizontal;\n    var dataSource = this.props.dataSource;\n    var visibleMin = this.scrollProperties.offset;\n    var visibleMax = visibleMin + this.scrollProperties.visibleLength;\n    var allRowIDs = dataSource.rowIdentities;\n\n    var header = this.props.renderHeader && this.props.renderHeader();\n    var totalIndex = header ? 1 : 0;\n    var visibilityChanged = false;\n    var changedRows = {};\n    for (var sectionIdx = 0; sectionIdx < allRowIDs.length; sectionIdx++) {\n      var rowIDs = allRowIDs[sectionIdx];\n      if (rowIDs.length === 0) {\n        continue;\n      }\n      var sectionID = dataSource.sectionIdentities[sectionIdx];\n      if (this.props.renderSectionHeader) {\n        totalIndex++;\n      }\n      var visibleSection = this._visibleRows[sectionID];\n      if (!visibleSection) {\n        visibleSection = {};\n      }\n      for (var rowIdx = 0; rowIdx < rowIDs.length; rowIdx++) {\n        var rowID = rowIDs[rowIdx];\n        var frame = this._childFrames[totalIndex];\n        totalIndex++;\n        if (this.props.renderSeparator && (rowIdx !== rowIDs.length - 1 || sectionIdx === allRowIDs.length - 1)) {\n          totalIndex++;\n        }\n        if (!frame) {\n          break;\n        }\n        var rowVisible = visibleSection[rowID];\n        var min = isVertical ? frame.y : frame.x;\n        var max = min + (isVertical ? frame.height : frame.width);\n        if (!min && !max || min === max) {\n          break;\n        }\n        if (min > visibleMax || max < visibleMin) {\n          if (rowVisible) {\n            visibilityChanged = true;\n            delete visibleSection[rowID];\n            if (!changedRows[sectionID]) {\n              changedRows[sectionID] = {};\n            }\n            changedRows[sectionID][rowID] = false;\n          }\n        } else if (!rowVisible) {\n          visibilityChanged = true;\n          visibleSection[rowID] = true;\n          if (!changedRows[sectionID]) {\n            changedRows[sectionID] = {};\n          }\n          changedRows[sectionID][rowID] = true;\n        }\n      }\n      if (!isEmpty(visibleSection)) {\n        this._visibleRows[sectionID] = visibleSection;\n      } else if (this._visibleRows[sectionID]) {\n        delete this._visibleRows[sectionID];\n      }\n    }\n    visibilityChanged && this.props.onChangeVisibleRows(this._visibleRows, changedRows);\n  },\n\n  _onScroll: function _onScroll(e) {\n    var isVertical = !this.props.horizontal;\n    this.scrollProperties.visibleLength = e.nativeEvent.layoutMeasurement[isVertical ? 'height' : 'width'];\n    this.scrollProperties.contentLength = e.nativeEvent.contentSize[isVertical ? 'height' : 'width'];\n    this.scrollProperties.offset = e.nativeEvent.contentOffset[isVertical ? 'y' : 'x'];\n    this._updateVisibleRows(e.nativeEvent.updatedChildFrames);\n    if (!this._maybeCallOnEndReached(e)) {\n      this._renderMoreRowsIfNeeded();\n    }\n\n    if (this.props.onEndReached && this._getDistanceFromEnd(this.scrollProperties) > this.props.onEndReachedThreshold) {\n      // Scrolled out of the end zone, so it should be able to trigger again.\n      this._sentEndForContentLength = null;\n    }\n\n    this.props.onScroll && this.props.onScroll(e);\n  }\n});\n\nexport default ListView;"]},"metadata":{},"sourceType":"module"}