{"ast":null,"code":"function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}import Dimensions from\"../Dimensions\";var PixelRatio=function(){function PixelRatio(){_classCallCheck(this,PixelRatio);}PixelRatio.get=function get(){return Dimensions.get('window').scale;};PixelRatio.getFontScale=function getFontScale(){return Dimensions.get('window').fontScale||PixelRatio.get();};PixelRatio.getPixelSizeForLayoutSize=function getPixelSizeForLayoutSize(layoutSize){return Math.round(layoutSize*PixelRatio.get());};PixelRatio.roundToNearestPixel=function roundToNearestPixel(layoutSize){var ratio=PixelRatio.get();return Math.round(layoutSize*ratio)/ratio;};return PixelRatio;}();export default PixelRatio;","map":{"version":3,"sources":["C:/Users/arnol/code/entroprise/node_modules/react-web-gifted-chat/node_modules/react-native-web/dist/exports/PixelRatio/index.js"],"names":["_classCallCheck","instance","Constructor","TypeError","Dimensions","PixelRatio","get","scale","getFontScale","fontScale","getPixelSizeForLayoutSize","layoutSize","Math","round","roundToNearestPixel","ratio"],"mappings":"AAAA,QAASA,CAAAA,eAAT,CAAyBC,QAAzB,CAAmCC,WAAnC,CAAgD,CAAE,GAAI,EAAED,QAAQ,WAAYC,CAAAA,WAAtB,CAAJ,CAAwC,CAAE,KAAM,IAAIC,CAAAA,SAAJ,CAAc,mCAAd,CAAN,CAA2D,CAAE,CAYzJ,MAAOC,CAAAA,UAAP,qBAMA,GAAIC,CAAAA,UAAU,CAAG,UAAY,CAC3B,QAASA,CAAAA,UAAT,EAAsB,CACpBL,eAAe,CAAC,IAAD,CAAOK,UAAP,CAAf,CACD,CAKDA,UAAU,CAACC,GAAX,CAAiB,QAASA,CAAAA,GAAT,EAAe,CAC9B,MAAOF,CAAAA,UAAU,CAACE,GAAX,CAAe,QAAf,EAAyBC,KAAhC,CACD,CAFD,CASAF,UAAU,CAACG,YAAX,CAA0B,QAASA,CAAAA,YAAT,EAAwB,CAChD,MAAOJ,CAAAA,UAAU,CAACE,GAAX,CAAe,QAAf,EAAyBG,SAAzB,EAAsCJ,UAAU,CAACC,GAAX,EAA7C,CACD,CAFD,CAUAD,UAAU,CAACK,yBAAX,CAAuC,QAASA,CAAAA,yBAAT,CAAmCC,UAAnC,CAA+C,CACpF,MAAOC,CAAAA,IAAI,CAACC,KAAL,CAAWF,UAAU,CAAGN,UAAU,CAACC,GAAX,EAAxB,CAAP,CACD,CAFD,CAYAD,UAAU,CAACS,mBAAX,CAAiC,QAASA,CAAAA,mBAAT,CAA6BH,UAA7B,CAAyC,CACxE,GAAII,CAAAA,KAAK,CAAGV,UAAU,CAACC,GAAX,EAAZ,CACA,MAAOM,CAAAA,IAAI,CAACC,KAAL,CAAWF,UAAU,CAAGI,KAAxB,EAAiCA,KAAxC,CACD,CAHD,CAKA,MAAOV,CAAAA,UAAP,CACD,CA7CgB,EAAjB,CA+CA,cAAeA,CAAAA,UAAf","sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Copyright (c) 2015-present, Nicolas Gallagher.\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nimport Dimensions from '../Dimensions';\n\n/**\n * PixelRatio gives access to the device pixel density.\n */\n\nvar PixelRatio = function () {\n  function PixelRatio() {\n    _classCallCheck(this, PixelRatio);\n  }\n\n  /**\n   * Returns the device pixel density.\n   */\n  PixelRatio.get = function get() {\n    return Dimensions.get('window').scale;\n  };\n\n  /**\n   * No equivalent for Web\n   */\n\n\n  PixelRatio.getFontScale = function getFontScale() {\n    return Dimensions.get('window').fontScale || PixelRatio.get();\n  };\n\n  /**\n   * Converts a layout size (dp) to pixel size (px).\n   * Guaranteed to return an integer number.\n   */\n\n\n  PixelRatio.getPixelSizeForLayoutSize = function getPixelSizeForLayoutSize(layoutSize) {\n    return Math.round(layoutSize * PixelRatio.get());\n  };\n\n  /**\n   * Rounds a layout size (dp) to the nearest layout size that corresponds to\n   * an integer number of pixels. For example, on a device with a PixelRatio\n   * of 3, `PixelRatio.roundToNearestPixel(8.4) = 8.33`, which corresponds to\n   * exactly (8.33 * 3) = 25 pixels.\n   */\n\n\n  PixelRatio.roundToNearestPixel = function roundToNearestPixel(layoutSize) {\n    var ratio = PixelRatio.get();\n    return Math.round(layoutSize * ratio) / ratio;\n  };\n\n  return PixelRatio;\n}();\n\nexport default PixelRatio;"]},"metadata":{},"sourceType":"module"}