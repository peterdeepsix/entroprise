{"ast":null,"code":"import React from\"react\";import PropTypes from\"prop-types\";import Link,{withPrefix,withAssetPrefix,navigate,push,replace,navigateTo,parsePath}from\"gatsby-link\";import PageRenderer from\"./public-page-renderer\";import loader from\"./loader\";var prefetchPathname=loader.enqueue;var StaticQueryContext=React.createContext({});function StaticQueryDataRenderer(_ref){var staticQueryData=_ref.staticQueryData,data=_ref.data,query=_ref.query,render=_ref.render;var finalData=data?data.data:staticQueryData[query]&&staticQueryData[query].data;return React.createElement(React.Fragment,null,finalData&&render(finalData),!finalData&&React.createElement(\"div\",null,\"Loading (StaticQuery)\"));}var StaticQuery=function StaticQuery(props){var data=props.data,query=props.query,render=props.render,children=props.children;return React.createElement(StaticQueryContext.Consumer,null,function(staticQueryData){return React.createElement(StaticQueryDataRenderer,{data:data,query:query,render:render||children,staticQueryData:staticQueryData});});};var useStaticQuery=function useStaticQuery(query){if(typeof React.useContext!==\"function\"&&process.env.NODE_ENV===\"development\"){throw new Error(\"You're likely using a version of React that doesn't support Hooks\\n\"+\"Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.\");}var context=React.useContext(StaticQueryContext);if(context[query]&&context[query].data){return context[query].data;}else{throw new Error(\"The result of this StaticQuery could not be fetched.\\n\\n\"+\"This is likely a bug in Gatsby and if refreshing the page does not fix it, \"+\"please open an issue in https://github.com/gatsbyjs/gatsby/issues\");}};StaticQuery.propTypes={data:PropTypes.object,query:PropTypes.string.isRequired,render:PropTypes.func,children:PropTypes.func};function graphql(){throw new Error(\"It appears like Gatsby is misconfigured. Gatsby related `graphql` calls \"+\"are supposed to only be evaluated at compile time, and then compiled away. \"+\"Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n\"+\"Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.\");}export{Link,withAssetPrefix,withPrefix,graphql,parsePath,navigate,push,replace,navigateTo,StaticQueryContext,StaticQuery,PageRenderer,useStaticQuery,prefetchPathname};","map":{"version":3,"sources":["C:/Users/arnol/code/entroprise/.cache/gatsby-browser-entry.js"],"names":["React","PropTypes","Link","withPrefix","withAssetPrefix","navigate","push","replace","navigateTo","parsePath","PageRenderer","loader","prefetchPathname","enqueue","StaticQueryContext","createContext","StaticQueryDataRenderer","staticQueryData","data","query","render","finalData","StaticQuery","props","children","useStaticQuery","useContext","process","env","NODE_ENV","Error","context","propTypes","object","string","isRequired","func","graphql"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,YAAtB,CACA,MAAOC,CAAAA,IAAP,EACEC,UADF,CAEEC,eAFF,CAGEC,QAHF,CAIEC,IAJF,CAKEC,OALF,CAMEC,UANF,CAOEC,SAPF,KAQO,aARP,CASA,MAAOC,CAAAA,YAAP,8BACA,MAAOC,CAAAA,MAAP,gBAEA,GAAMC,CAAAA,gBAAgB,CAAGD,MAAM,CAACE,OAAhC,CAEA,GAAMC,CAAAA,kBAAkB,CAAGd,KAAK,CAACe,aAAN,CAAoB,EAApB,CAA3B,CAEA,QAASC,CAAAA,uBAAT,MAA2E,IAAxCC,CAAAA,eAAwC,MAAxCA,eAAwC,CAAvBC,IAAuB,MAAvBA,IAAuB,CAAjBC,KAAiB,MAAjBA,KAAiB,CAAVC,MAAU,MAAVA,MAAU,CACzE,GAAMC,CAAAA,SAAS,CAAGH,IAAI,CAClBA,IAAI,CAACA,IADa,CAElBD,eAAe,CAACE,KAAD,CAAf,EAA0BF,eAAe,CAACE,KAAD,CAAf,CAAuBD,IAFrD,CAIA,MACE,qBAAC,KAAD,CAAO,QAAP,MACGG,SAAS,EAAID,MAAM,CAACC,SAAD,CADtB,CAEG,CAACA,SAAD,EAAc,uDAFjB,CADF,CAMD,CAED,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAAC,KAAK,CAAI,IACnBL,CAAAA,IADmB,CACeK,KADf,CACnBL,IADmB,CACbC,KADa,CACeI,KADf,CACbJ,KADa,CACNC,MADM,CACeG,KADf,CACNH,MADM,CACEI,QADF,CACeD,KADf,CACEC,QADF,CAG3B,MACE,qBAAC,kBAAD,CAAoB,QAApB,MACG,SAAAP,eAAe,QACd,qBAAC,uBAAD,EACE,IAAI,CAAEC,IADR,CAEE,KAAK,CAAEC,KAFT,CAGE,MAAM,CAAEC,MAAM,EAAII,QAHpB,CAIE,eAAe,CAAEP,eAJnB,EADc,EADlB,CADF,CAYD,CAfD,CAiBA,GAAMQ,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAAN,KAAK,CAAI,CAC9B,GACE,MAAOnB,CAAAA,KAAK,CAAC0B,UAAb,eACAC,OAAO,CAACC,GAAR,CAAYC,QAAZ,gBAFF,CAGE,CACA,KAAM,IAAIC,CAAAA,KAAJ,CACJ,2JADI,CAAN,CAID,CACD,GAAMC,CAAAA,OAAO,CAAG/B,KAAK,CAAC0B,UAAN,CAAiBZ,kBAAjB,CAAhB,CACA,GAAIiB,OAAO,CAACZ,KAAD,CAAP,EAAkBY,OAAO,CAACZ,KAAD,CAAP,CAAeD,IAArC,CAA2C,CACzC,MAAOa,CAAAA,OAAO,CAACZ,KAAD,CAAP,CAAeD,IAAtB,CACD,CAFD,IAEO,CACL,KAAM,IAAIY,CAAAA,KAAJ,CACJ,4MADI,CAAN,CAKD,CACF,CApBD,CAsBAR,WAAW,CAACU,SAAZ,CAAwB,CACtBd,IAAI,CAAEjB,SAAS,CAACgC,MADM,CAEtBd,KAAK,CAAElB,SAAS,CAACiC,MAAV,CAAiBC,UAFF,CAGtBf,MAAM,CAAEnB,SAAS,CAACmC,IAHI,CAItBZ,QAAQ,CAAEvB,SAAS,CAACmC,IAJE,CAAxB,CAOA,QAASC,CAAAA,OAAT,EAAmB,CACjB,KAAM,IAAIP,CAAAA,KAAJ,CACJ,qVADI,CAAN,CAMD,CAED,OACE5B,IADF,CAEEE,eAFF,CAGED,UAHF,CAIEkC,OAJF,CAKE5B,SALF,CAMEJ,QANF,CAOEC,IAPF,CAQEC,OARF,CASEC,UATF,CAUEM,kBAVF,CAWEQ,WAXF,CAYEZ,YAZF,CAaEe,cAbF,CAcEb,gBAdF","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n"]},"metadata":{},"sourceType":"module"}