{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useState,useEffect}from\"react\";import{navigate}from\"gatsby\";import Badge from\"@material-ui/core/Badge\";import Avatar from\"@material-ui/core/Avatar\";import List from\"@material-ui/core/List\";import ListItem from\"@material-ui/core/ListItem\";import ListItemText from\"@material-ui/core/ListItemText\";import ListItemAvatar from\"@material-ui/core/ListItemAvatar\";import{makeStyles,withStyles}from\"@material-ui/core/styles\";import{observer}from\"mobx-react\";import{useStore}from\"mobx-store-provider\";import firebase from\"gatsby-plugin-firebase\";import{useAuthState}from\"react-firebase-hooks/auth\";import{useObjectVal}from\"react-firebase-hooks/database\";import{Container,Box,Button,Card,CardContent,CardHeader,Typography}from\"@material-ui/core\";var StyledBadge=withStyles(function(theme){return{badge:{backgroundColor:\"#44b700\",color:\"#44b700\",boxShadow:\"0 0 0 2px \"+theme.palette.background.paper,\"&::after\":{position:\"absolute\",top:0,left:0,width:\"100%\",height:\"100%\",borderRadius:\"50%\",animation:\"$ripple 1.2s infinite ease-in-out\",border:\"1px solid currentColor\",content:'\"\"'}},\"@keyframes ripple\":{\"0%\":{transform:\"scale(.8)\",opacity:1},\"100%\":{transform:\"scale(2.4)\",opacity:0}}};})(Badge);var useStyles=makeStyles(function(theme){return{root:{width:\"100%\"}};});var AccountPage=function AccountPage(){var classes=useStyles();var _useAuthState=useAuthState(firebase.auth()),_useAuthState2=_slicedToArray(_useAuthState,3),user=_useAuthState2[0],loading=_useAuthState2[1],error=_useAuthState2[2];var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isOnline=_useState2[0],setIsOnline=_useState2[1];var db=firebase.firestore();var usersRef=db.collection(\"users\");var provider=new firebase.auth.GoogleAuthProvider();var signInWithGoogle=function signInWithGoogle(){firebase.auth().signInWithPopup(provider).then(function(result){usersRef.doc(user.uid).delete().then(function(){console.log(\"User successfully deleted!\");}).catch(function(error){console.error(\"Error removing User: \",error);});usersRef.doc(result.user.uid).set({displayName:result.user.displayName,email:result.user.email,emailVerified:result.user.emailVerified,isAnonymous:result.user.isAnonymous,phoneNumber:result.user.phoneNumber,photoURL:result.user.photoURL,providerId:result.user.providerId,refreshToken:result.user.refreshToken,uid:result.user.uid,status:{state:\"online\",last_changed:firebase.firestore.FieldValue.serverTimestamp()}},{merge:true});}).catch(function(error){console.log(error.code);console.log(error.message);});};var upgradeAccountWithGoogle=function upgradeAccountWithGoogle(){};var signOut=function signOut(){var userToDelete=user.uid;if(usersRef.isAnonymous){usersRef.doc(userToDelete).delete().then(function(){console.log(\"User successfully deleted!\");firebase.auth().signOut().then();}).catch(function(error){console.error(\"Error removing User: \",error);});}else{usersRef.doc(user.uid).set({displayName:user.displayName,email:user.email,emailVerified:user.emailVerified,isAnonymous:user.isAnonymous,phoneNumber:user.phoneNumber,photoURL:user.photoURL,providerId:user.providerId,refreshToken:user.refreshToken,uid:user.uid,status:{state:\"offline\",last_changed:firebase.firestore.FieldValue.serverTimestamp()}},{merge:true}).catch(function(error){console.log(error.code);console.log(error.message);}).then(firebase.auth().signOut().then());}};if(user)return React.createElement(Container,{maxWidth:\"sm\"},React.createElement(Box,{mt:2,mb:1},React.createElement(Card,{variant:\"outlined\"},React.createElement(CardHeader,{title:\"Account Details\"}),React.createElement(CardContent,null,user.isAnonymous&&React.createElement(React.Fragment,null,React.createElement(List,{className:classes.root},React.createElement(ListItem,{divider:true,disableGutters:true},React.createElement(ListItemText,{primary:\"Anonymous User\",secondary:\"Sign In To Upgrade\"})),React.createElement(ListItem,{disableGutters:true},React.createElement(ListItemText,{primary:\"User ID\",secondary:user.uid}))))||React.createElement(React.Fragment,null,React.createElement(List,{className:classes.root,disablePadding:true},React.createElement(ListItem,{divider:true,disableGutters:true},React.createElement(ListItemText,{primary:user.providerData[0].displayName,secondary:user.providerData[0].email})),React.createElement(ListItem,{divider:true,disableGutters:true},React.createElement(ListItemText,{primary:\"Account Provider\",secondary:user.providerData[0].providerId})),React.createElement(ListItem,{disableGutters:true},React.createElement(ListItemText,{primary:\"UID\",secondary:user.uid}))))))),React.createElement(Box,{mt:2,mb:1},React.createElement(Card,{variant:\"outlined\"},React.createElement(CardHeader,{title:\"Account Actions\"}),React.createElement(CardContent,null,user.isAnonymous&&React.createElement(React.Fragment,null,React.createElement(Box,{mt:2,mb:1},React.createElement(Button,{variant:\"contained\",color:\"primary\",onClick:signInWithGoogle},\"Sign In With Google\"))),!user.isAnonymous&&React.createElement(Box,{mt:2,mb:1},React.createElement(Button,{variant:\"outlined\",color:\"primary\",onClick:signOut},\"Sign Out\"))))));return null;};export default AccountPage;","map":{"version":3,"sources":["C:/Users/arnol/code/entroprise/src/containers/AccountPage.js"],"names":["React","useState","useEffect","navigate","Badge","Avatar","List","ListItem","ListItemText","ListItemAvatar","makeStyles","withStyles","observer","useStore","firebase","useAuthState","useObjectVal","Container","Box","Button","Card","CardContent","CardHeader","Typography","StyledBadge","theme","badge","backgroundColor","color","boxShadow","palette","background","paper","position","top","left","width","height","borderRadius","animation","border","content","transform","opacity","useStyles","root","AccountPage","classes","auth","user","loading","error","isOnline","setIsOnline","db","firestore","usersRef","collection","provider","GoogleAuthProvider","signInWithGoogle","signInWithPopup","then","result","doc","uid","delete","console","log","catch","set","displayName","email","emailVerified","isAnonymous","phoneNumber","photoURL","providerId","refreshToken","status","state","last_changed","FieldValue","serverTimestamp","merge","code","message","upgradeAccountWithGoogle","signOut","userToDelete","providerData"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\r\nimport { navigate } from \"gatsby\"\r\nimport Badge from \"@material-ui/core/Badge\"\r\nimport Avatar from \"@material-ui/core/Avatar\"\r\nimport List from \"@material-ui/core/List\"\r\nimport ListItem from \"@material-ui/core/ListItem\"\r\nimport ListItemText from \"@material-ui/core/ListItemText\"\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\"\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\"\r\n\r\nimport { observer } from \"mobx-react\"\r\nimport { useStore } from \"mobx-store-provider\"\r\n\r\nimport firebase from \"gatsby-plugin-firebase\"\r\nimport { useAuthState } from \"react-firebase-hooks/auth\"\r\nimport { useObjectVal } from \"react-firebase-hooks/database\"\r\n\r\nimport {\r\n  Container,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Typography,\r\n} from \"@material-ui/core\"\r\n\r\nconst StyledBadge = withStyles(theme => ({\r\n  badge: {\r\n    backgroundColor: \"#44b700\",\r\n    color: \"#44b700\",\r\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n    \"&::after\": {\r\n      position: \"absolute\",\r\n      top: 0,\r\n      left: 0,\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      borderRadius: \"50%\",\r\n      animation: \"$ripple 1.2s infinite ease-in-out\",\r\n      border: \"1px solid currentColor\",\r\n      content: '\"\"',\r\n    },\r\n  },\r\n  \"@keyframes ripple\": {\r\n    \"0%\": {\r\n      transform: \"scale(.8)\",\r\n      opacity: 1,\r\n    },\r\n    \"100%\": {\r\n      transform: \"scale(2.4)\",\r\n      opacity: 0,\r\n    },\r\n  },\r\n}))(Badge)\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n}))\r\n\r\nconst AccountPage = () => {\r\n  const classes = useStyles()\r\n  const [user, loading, error] = useAuthState(firebase.auth())\r\n  const [isOnline, setIsOnline] = useState(false)\r\n\r\n  const db = firebase.firestore()\r\n  const usersRef = db.collection(\"users\")\r\n\r\n  const provider = new firebase.auth.GoogleAuthProvider()\r\n  // provider.addScope(\"https://www.googleapis.com/auth/contacts.readonly\")\r\n  // provider.addScope(\"https://www.googleapis.com/auth/calendar\")\r\n\r\n  const signInWithGoogle = () => {\r\n    firebase\r\n      .auth()\r\n      .signInWithPopup(provider)\r\n      .then(result => {\r\n        usersRef\r\n          .doc(user.uid)\r\n          .delete()\r\n          .then(() => {\r\n            console.log(\"User successfully deleted!\")\r\n          })\r\n          .catch(error => {\r\n            console.error(\"Error removing User: \", error)\r\n          })\r\n        usersRef.doc(result.user.uid).set(\r\n          {\r\n            displayName: result.user.displayName,\r\n            email: result.user.email,\r\n            emailVerified: result.user.emailVerified,\r\n            isAnonymous: result.user.isAnonymous,\r\n            phoneNumber: result.user.phoneNumber,\r\n            photoURL: result.user.photoURL,\r\n            providerId: result.user.providerId,\r\n            refreshToken: result.user.refreshToken,\r\n            uid: result.user.uid,\r\n            status: {\r\n              state: \"online\",\r\n              last_changed: firebase.firestore.FieldValue.serverTimestamp(),\r\n            },\r\n          },\r\n          { merge: true }\r\n        )\r\n      })\r\n      .catch(error => {\r\n        console.log(error.code)\r\n        console.log(error.message)\r\n      })\r\n  }\r\n\r\n  const upgradeAccountWithGoogle = () => {\r\n    // user\r\n    //   .linkWithPopup(provider)\r\n    //   .then(result => {\r\n    //     user\r\n    //       .reauthenticateWithCredential(result.credential)\r\n    //       .then(result => {\r\n    //         usersRef\r\n    //           .doc(user.uid)\r\n    //           .delete()\r\n    //           .then(function() {\r\n    //             console.log(\"User successfully deleted!\")\r\n    //           })\r\n    //           .catch(function(error) {\r\n    //             console.error(\"Error removing User: \", error)\r\n    //           })\r\n    //         usersRef.doc(result.user.uid).set(\r\n    //           {\r\n    //             displayName: result.user.displayName,\r\n    //             email: result.user.email,\r\n    //             emailVerified: result.user.emailVerified,\r\n    //             isAnonymous: result.user.isAnonymous,\r\n    //             phoneNumber: result.user.phoneNumber,\r\n    //             photoURL: result.user.photoURL,\r\n    //             providerId: result.user.providerId,\r\n    //             refreshToken: result.user.refreshToken,\r\n    //             uid: result.user.uid,\r\n    //             online: true,\r\n    //           },\r\n    //           { merge: true }\r\n    //         )\r\n    //       })\r\n    //       .catch(error => {\r\n    //         const errorCode = error.code\r\n    //         const errorMessage = error.message\r\n    //         if (errorCode === \"auth/account-exists-with-different-credential\") {\r\n    //           alert(errorMessage)\r\n    //         } else {\r\n    //         }\r\n    //       })\r\n    //   })\r\n    //   .catch(error => {\r\n    //     const errorCode = error.code\r\n    //     const errorMessage = error.message\r\n    //     if (errorCode === \"auth/credential-already-in-use\") {\r\n    //       firebase\r\n    //         .auth()\r\n    //         .signInWithPopup(provider)\r\n    //         .then(function(result) {\r\n    //           usersRef.doc(result.user.uid).set(\r\n    //             {\r\n    //               displayName: result.user.displayName,\r\n    //               email: result.user.email,\r\n    //               emailVerified: result.user.emailVerified,\r\n    //               isAnonymous: result.user.isAnonymous,\r\n    //               phoneNumber: result.user.phoneNumber,\r\n    //               photoURL: result.user.photoURL,\r\n    //               providerId: result.user.providerId,\r\n    //               refreshToken: result.user.refreshToken,\r\n    //               uid: result.user.uid,\r\n    //               online: true,\r\n    //             },\r\n    //             { merge: true }\r\n    //           )\r\n    //         })\r\n    //         .catch(function(error) {})\r\n    //     } else {\r\n    //     }\r\n    //   })\r\n  }\r\n\r\n  const signOut = () => {\r\n    const userToDelete = user.uid\r\n    if (usersRef.isAnonymous) {\r\n      usersRef\r\n        .doc(userToDelete)\r\n        .delete()\r\n        .then(() => {\r\n          console.log(\"User successfully deleted!\")\r\n          firebase\r\n            .auth()\r\n            .signOut()\r\n            .then()\r\n        })\r\n        .catch(error => {\r\n          console.error(\"Error removing User: \", error)\r\n        })\r\n    } else {\r\n      usersRef\r\n        .doc(user.uid)\r\n        .set(\r\n          {\r\n            displayName: user.displayName,\r\n            email: user.email,\r\n            emailVerified: user.emailVerified,\r\n            isAnonymous: user.isAnonymous,\r\n            phoneNumber: user.phoneNumber,\r\n            photoURL: user.photoURL,\r\n            providerId: user.providerId,\r\n            refreshToken: user.refreshToken,\r\n            uid: user.uid,\r\n            status: {\r\n              state: \"offline\",\r\n              last_changed: firebase.firestore.FieldValue.serverTimestamp(),\r\n            },\r\n          },\r\n          { merge: true }\r\n        )\r\n        .catch(error => {\r\n          console.log(error.code)\r\n          console.log(error.message)\r\n        })\r\n        .then(\r\n          firebase\r\n            .auth()\r\n            .signOut()\r\n            .then()\r\n        )\r\n    }\r\n  }\r\n\r\n  if (user)\r\n    return (\r\n      <Container maxWidth=\"sm\">\r\n        <Box mt={2} mb={1}>\r\n          <Card variant=\"outlined\">\r\n            <CardHeader title=\"Account Details\" />\r\n            <CardContent>\r\n              {(user.isAnonymous && (\r\n                <>\r\n                  <List className={classes.root}>\r\n                    <ListItem divider disableGutters>\r\n                      <ListItemText\r\n                        primary={\"Anonymous User\"}\r\n                        secondary=\"Sign In To Upgrade\"\r\n                      />\r\n                    </ListItem>\r\n                    <ListItem disableGutters>\r\n                      <ListItemText primary=\"User ID\" secondary={user.uid} />\r\n                    </ListItem>\r\n                  </List>\r\n                </>\r\n              )) || (\r\n                <>\r\n                  <List className={classes.root} disablePadding>\r\n                    <ListItem divider disableGutters>\r\n                      {/* {user.status.state == \"online\" && (\r\n                        <ListItemAvatar>\r\n                          <StyledBadge\r\n                            overlap=\"circle\"\r\n                            anchorOrigin={{\r\n                              vertical: \"bottom\",\r\n                              horizontal: \"right\",\r\n                            }}\r\n                            variant=\"dot\"\r\n                          >\r\n                            <Avatar\r\n                              src={user.providerData[0].photoURL}\r\n                              alt={user.providerData[0].displayName}\r\n                            />\r\n                          </StyledBadge>\r\n                        </ListItemAvatar>\r\n                      )} */}\r\n                      <ListItemText\r\n                        primary={user.providerData[0].displayName}\r\n                        secondary={user.providerData[0].email}\r\n                      />\r\n                    </ListItem>\r\n                    <ListItem divider disableGutters>\r\n                      <ListItemText\r\n                        primary=\"Account Provider\"\r\n                        secondary={user.providerData[0].providerId}\r\n                      />\r\n                    </ListItem>\r\n                    <ListItem disableGutters>\r\n                      <ListItemText primary=\"UID\" secondary={user.uid} />\r\n                    </ListItem>\r\n                  </List>\r\n                </>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n        </Box>\r\n        <Box mt={2} mb={1}>\r\n          <Card variant=\"outlined\">\r\n            <CardHeader title=\"Account Actions\" />\r\n            <CardContent>\r\n              {user.isAnonymous && (\r\n                <>\r\n                  <Box mt={2} mb={1}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={signInWithGoogle}\r\n                    >\r\n                      Sign In With Google\r\n                    </Button>\r\n                  </Box>\r\n                  {/* <Box mt={2} mb={1}>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      onClick={upgradeAccountWithGoogle}\r\n                    >\r\n                      Link Account With Google\r\n                    </Button>\r\n                  </Box> */}\r\n                </>\r\n              )}\r\n              {!user.isAnonymous && (\r\n                <Box mt={2} mb={1}>\r\n                  <Button variant=\"outlined\" color=\"primary\" onClick={signOut}>\r\n                    Sign Out\r\n                  </Button>\r\n                </Box>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n        </Box>\r\n      </Container>\r\n    )\r\n  return null\r\n}\r\nexport default AccountPage\r\n"]},"metadata":{},"sourceType":"module"}