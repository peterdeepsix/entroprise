{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useState,useEffect}from\"react\";import clsx from\"clsx\";import{makeStyles}from\"@material-ui/core/styles\";import{Avatar,Chip}from\"@material-ui/core\";import CallOutlinedIcon from\"@material-ui/icons/CallOutlined\";var useStyles=makeStyles(function(theme){return{};});var TreeChip=function TreeChip(_ref){var nodeData=_ref.nodeData,handleClickOpen=_ref.handleClickOpen;var classes=useStyles();var name=nodeData.name,attributes=nodeData.attributes;var isOnline=attributes.isOnline,isAvailable=attributes.isAvailable;var _useState=useState(\"default\"),_useState2=_slicedToArray(_useState,2),color=_useState2[0],setColor=_useState2[1];useEffect(function(){if(isOnline===\"true\"){setColor(\"secondary\");}if(isAvailable===\"true\"){setColor(\"primary\");}},[]);var handleDelete=function handleDelete(){console.info(nodeData);};return React.createElement(React.Fragment,null,React.createElement(Chip,{color:color,avatar:React.createElement(Avatar,{alt:\"Parent\"}),label:name,onClick:handleClickOpen,onDelete:handleClickOpen,deleteIcon:React.createElement(CallOutlinedIcon,null)}));};export default TreeChip;","map":{"version":3,"sources":["C:/Users/arnol/code/entroprise/src/components/TreePage/TreeChip.js"],"names":["React","useState","useEffect","clsx","makeStyles","Avatar","Chip","CallOutlinedIcon","useStyles","theme","TreeChip","nodeData","handleClickOpen","classes","name","attributes","isOnline","isAvailable","color","setColor","handleDelete","console","info"],"mappings":"iEAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,IAAP,KAAiB,MAAjB,CAEA,OAASC,UAAT,KAA2B,0BAA3B,CACA,OAASC,MAAT,CAAiBC,IAAjB,KAA6B,mBAA7B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,iCAA7B,CAEA,GAAMC,CAAAA,SAAS,CAAGJ,UAAU,CAAC,SAAAK,KAAK,QAAK,EAAL,EAAN,CAA5B,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAmC,IAAhCC,CAAAA,QAAgC,MAAhCA,QAAgC,CAAtBC,eAAsB,MAAtBA,eAAsB,CAClD,GAAMC,CAAAA,OAAO,CAAGL,SAAS,EAAzB,CADkD,GAE1CM,CAAAA,IAF0C,CAErBH,QAFqB,CAE1CG,IAF0C,CAEpCC,UAFoC,CAErBJ,QAFqB,CAEpCI,UAFoC,IAG1CC,CAAAA,QAH0C,CAGhBD,UAHgB,CAG1CC,QAH0C,CAGhCC,WAHgC,CAGhBF,UAHgB,CAGhCE,WAHgC,eAIxBhB,QAAQ,CAAC,SAAD,CAJgB,wCAI3CiB,KAJ2C,eAIpCC,QAJoC,eAMlDjB,SAAS,CAAC,UAAM,CACd,GAAIc,QAAQ,GAAK,MAAjB,CAAyB,CACvBG,QAAQ,CAAC,WAAD,CAAR,CACD,CACD,GAAIF,WAAW,GAAK,MAApB,CAA4B,CAC1BE,QAAQ,CAAC,SAAD,CAAR,CACD,CACF,CAPQ,CAON,EAPM,CAAT,CASA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzBC,OAAO,CAACC,IAAR,CAAaX,QAAb,EACD,CAFD,CAIA,MACE,yCACE,oBAAC,IAAD,EACE,KAAK,CAAEO,KADT,CAEE,MAAM,CAAE,oBAAC,MAAD,EAAQ,GAAG,CAAC,QAAZ,EAFV,CAGE,KAAK,CAAEJ,IAHT,CAIE,OAAO,CAAEF,eAJX,CAKE,QAAQ,CAAEA,eALZ,CAME,UAAU,CAAE,oBAAC,gBAAD,MANd,EADF,CADF,CAYD,CA/BD,CAiCA,cAAeF,CAAAA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\"\r\nimport clsx from \"clsx\"\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport { Avatar, Chip } from \"@material-ui/core\"\r\nimport CallOutlinedIcon from \"@material-ui/icons/CallOutlined\"\r\n\r\nconst useStyles = makeStyles(theme => ({}))\r\n\r\nconst TreeChip = ({ nodeData, handleClickOpen }) => {\r\n  const classes = useStyles()\r\n  const { name, attributes } = nodeData\r\n  const { isOnline, isAvailable } = attributes\r\n  const [color, setColor] = useState(\"default\")\r\n\r\n  useEffect(() => {\r\n    if (isOnline === \"true\") {\r\n      setColor(\"secondary\")\r\n    }\r\n    if (isAvailable === \"true\") {\r\n      setColor(\"primary\")\r\n    }\r\n  }, [])\r\n\r\n  const handleDelete = () => {\r\n    console.info(nodeData)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Chip\r\n        color={color}\r\n        avatar={<Avatar alt=\"Parent\" />}\r\n        label={name}\r\n        onClick={handleClickOpen}\r\n        onDelete={handleClickOpen}\r\n        deleteIcon={<CallOutlinedIcon />}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TreeChip\r\n"]},"metadata":{},"sourceType":"module"}