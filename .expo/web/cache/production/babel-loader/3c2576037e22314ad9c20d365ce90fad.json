{"ast":null,"code":"'use strict';function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}var EventSubscription=function(){function EventSubscription(subscriber){_classCallCheck(this,EventSubscription);this.subscriber=subscriber;}EventSubscription.prototype.remove=function remove(){this.subscriber.removeSubscription(this);};return EventSubscription;}();export default EventSubscription;","map":{"version":3,"sources":["C:/Users/arnol/code/entroprise/node_modules/react-web-gifted-chat/node_modules/react-native-web/dist/vendor/react-native/emitter/EventSubscription.js"],"names":["_classCallCheck","instance","Constructor","TypeError","EventSubscription","subscriber","prototype","remove","removeSubscription"],"mappings":"AASA,aAEA,QAASA,CAAAA,eAAT,CAAyBC,QAAzB,CAAmCC,WAAnC,CAAgD,CAAE,GAAI,EAAED,QAAQ,WAAYC,CAAAA,WAAtB,CAAJ,CAAwC,CAAE,KAAM,IAAIC,CAAAA,SAAJ,CAAc,mCAAd,CAAN,CAA2D,CAAE,CAMzJ,GAAIC,CAAAA,iBAAiB,CAAG,UAAY,CAMlC,QAASA,CAAAA,iBAAT,CAA2BC,UAA3B,CAAuC,CACrCL,eAAe,CAAC,IAAD,CAAOI,iBAAP,CAAf,CAEA,KAAKC,UAAL,CAAkBA,UAAlB,CACD,CAODD,iBAAiB,CAACE,SAAlB,CAA4BC,MAA5B,CAAqC,QAASA,CAAAA,MAAT,EAAkB,CACrD,KAAKF,UAAL,CAAgBG,kBAAhB,CAAmC,IAAnC,EACD,CAFD,CAIA,MAAOJ,CAAAA,iBAAP,CACD,CAtBuB,EAAxB,CAwBA,cAAeA,CAAAA,iBAAf","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule EventSubscription\n * \n */\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * EventSubscription represents a subscription to a particular event. It can\n * remove its own subscription.\n */\nvar EventSubscription = function () {\n\n  /**\n   * @param {EventSubscriptionVendor} subscriber the subscriber that controls\n   *   this subscription.\n   */\n  function EventSubscription(subscriber) {\n    _classCallCheck(this, EventSubscription);\n\n    this.subscriber = subscriber;\n  }\n\n  /**\n   * Removes this subscription from the subscriber that controls it.\n   */\n\n\n  EventSubscription.prototype.remove = function remove() {\n    this.subscriber.removeSubscription(this);\n  };\n\n  return EventSubscription;\n}();\n\nexport default EventSubscription;"]},"metadata":{},"sourceType":"module"}