{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _extends from\"@babel/runtime/helpers/extends\";import React,{useEffect,useRef,useState}from\"react\";import firebase from\"gatsby-plugin-firebase\";import{useListVals}from\"react-firebase-hooks/database\";import Tree from\"react-d3-tree\";import{makeStyles}from\"@material-ui/core/styles\";import{Typography,Container,Box,Card,CardContent,CardHeader,Dialog,AppBar,Toolbar,Slide,Button,IconButton}from\"@material-ui/core\";import CloseIcon from\"@material-ui/icons/Close\";import CallEndOutlinedIcon from\"@material-ui/icons/CallEndOutlined\";import Loadable from\"@loadable/component\";import IndefiniteLoading from\"src/components/Loading/IndefiniteLoading\";var TreeChip=Loadable(function(){return import(\"./TreeChip\");},{fallback:React.createElement(IndefiniteLoading,{message:\"TreeChip\"})});var useStyles=makeStyles(function(theme){return{root:{width:\"100%\",height:\"100vh\"},appBar:{position:\"relative\"},title:{marginLeft:theme.spacing(2),flex:1}};});var treeData=[{name:\"Parent\",attributes:{isOnline:\"true\",isAvailable:\"false\"},children:[{name:\"Child\",attributes:{isOnline:\"false\",isAvailable:\"false\"},children:[{name:\"Deep Child\",attributes:{isOnline:\"false\",isAvailable:\"false\"}},{name:\"Deep Child\",attributes:{isOnline:\"true\",isAvailable:\"true\"},children:[{name:\"Deepest Child\",attributes:{isOnline:\"false\",isAvailable:\"false\"}}]},{name:\"Deep Child\",attributes:{isOnline:\"true\",isAvailable:\"true\"}}]},{name:\"Child\",attributes:{isOnline:\"true\",isAvailable:\"true\"}}]}];var Transition=React.forwardRef(function Transition(props,ref){return React.createElement(Slide,_extends({direction:\"up\",ref:ref},props));});var TreePageComponent=function TreePageComponent(){var classes=useStyles();var _useState=useState(null),_useState2=_slicedToArray(_useState,2),translate=_useState2[0],setTranslate=_useState2[1];var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),open=_React$useState2[0],setOpen=_React$useState2[1];var treeRef=useRef(null);useEffect(function(){},[]);var handleClickOpen=function handleClickOpen(){setOpen(true);};var handleClose=function handleClose(){setOpen(false);};return React.createElement(React.Fragment,null,React.createElement(Container,{disableGutters:true,maxWidth:\"lg\"},React.createElement(\"div\",{className:classes.root,ref:treeRef},React.createElement(Tree,{collapsible:false,allowForeignObjects:true,data:treeData,orientation:\"vertical\",nodeLabelComponent:{render:React.createElement(TreeChip,{handleClickOpen:handleClickOpen}),foreignObjectWrapper:{y:-16,x:-16,width:\"100%\"}}}))),React.createElement(Dialog,{fullScreen:true,open:open,onClose:handleClose,TransitionComponent:Transition},React.createElement(AppBar,{className:classes.appBar},React.createElement(Toolbar,null,React.createElement(IconButton,{edge:\"start\",color:\"inherit\",onClick:handleClose,\"aria-label\":\"close\"},React.createElement(CloseIcon,null)),React.createElement(Typography,{variant:\"h6\",className:classes.title},\"Video Call\"),React.createElement(Button,{autoFocus:true,color:\"inherit\",onClick:handleClose,startIcon:React.createElement(CallEndOutlinedIcon,null)},\"Hangup\")))));};export default TreePageComponent;","map":{"version":3,"sources":["C:/Users/arnol/code/entroprise/src/components/TreePage/TreePageComponent.js"],"names":["React","useEffect","useRef","useState","firebase","useListVals","Tree","makeStyles","Typography","Container","Box","Card","CardContent","CardHeader","Dialog","AppBar","Toolbar","Slide","Button","IconButton","CloseIcon","CallEndOutlinedIcon","Loadable","IndefiniteLoading","TreeChip","fallback","useStyles","theme","root","width","height","appBar","position","title","marginLeft","spacing","flex","treeData","name","attributes","isOnline","isAvailable","children","Transition","forwardRef","props","ref","TreePageComponent","classes","translate","setTranslate","open","setOpen","treeRef","handleClickOpen","handleClose","render","foreignObjectWrapper","y","x"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\"\r\nimport firebase from \"gatsby-plugin-firebase\"\r\nimport { useListVals } from \"react-firebase-hooks/database\"\r\nimport Tree from \"react-d3-tree\"\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport {\r\n  Typography,\r\n  Container,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Dialog,\r\n  AppBar,\r\n  Toolbar,\r\n  Slide,\r\n  Button,\r\n  IconButton,\r\n} from \"@material-ui/core\"\r\nimport CloseIcon from \"@material-ui/icons/Close\"\r\nimport CallEndOutlinedIcon from \"@material-ui/icons/CallEndOutlined\"\r\n\r\nimport Loadable from \"@loadable/component\"\r\nimport IndefiniteLoading from \"src/components/Loading/IndefiniteLoading\"\r\n\r\nconst TreeChip = Loadable(() => import(\"./TreeChip\"), {\r\n  fallback: <IndefiniteLoading message=\"TreeChip\" />,\r\n})\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    height: \"100vh\",\r\n  },\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}))\r\n\r\nconst treeData = [\r\n  {\r\n    name: \"Parent\",\r\n    attributes: {\r\n      isOnline: \"true\",\r\n      isAvailable: \"false\",\r\n    },\r\n    children: [\r\n      {\r\n        name: \"Child\",\r\n        attributes: {\r\n          isOnline: \"false\",\r\n          isAvailable: \"false\",\r\n        },\r\n\r\n        children: [\r\n          {\r\n            name: \"Deep Child\",\r\n            attributes: {\r\n              isOnline: \"false\",\r\n              isAvailable: \"false\",\r\n            },\r\n          },\r\n          {\r\n            name: \"Deep Child\",\r\n            attributes: {\r\n              isOnline: \"true\",\r\n              isAvailable: \"true\",\r\n            },\r\n\r\n            children: [\r\n              {\r\n                name: \"Deepest Child\",\r\n                attributes: {\r\n                  isOnline: \"false\",\r\n                  isAvailable: \"false\",\r\n                },\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            name: \"Deep Child\",\r\n            attributes: {\r\n              isOnline: \"true\",\r\n              isAvailable: \"true\",\r\n            },\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        name: \"Child\",\r\n        attributes: {\r\n          isOnline: \"true\",\r\n          isAvailable: \"true\",\r\n        },\r\n      },\r\n    ],\r\n  },\r\n]\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />\r\n})\r\n\r\nconst TreePageComponent = () => {\r\n  const classes = useStyles()\r\n\r\n  const [translate, setTranslate] = useState(null)\r\n  const [open, setOpen] = React.useState(false)\r\n\r\n  const treeRef = useRef(null)\r\n\r\n  useEffect(() => {}, [])\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true)\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setOpen(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Container disableGutters maxWidth=\"lg\">\r\n        <div className={classes.root} ref={treeRef}>\r\n          <Tree\r\n            collapsible={false}\r\n            allowForeignObjects\r\n            data={treeData}\r\n            orientation={\"vertical\"}\r\n            nodeLabelComponent={{\r\n              render: <TreeChip handleClickOpen={handleClickOpen} />,\r\n              foreignObjectWrapper: {\r\n                y: -16,\r\n                x: -16,\r\n                width: \"100%\",\r\n              },\r\n            }}\r\n          />\r\n        </div>\r\n      </Container>\r\n      <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Video Call\r\n            </Typography>\r\n            <Button\r\n              autoFocus\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n              startIcon={<CallEndOutlinedIcon />}\r\n            >\r\n              Hangup\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </Dialog>\r\n    </>\r\n  )\r\n}\r\nexport default TreePageComponent\r\n"]},"metadata":{},"sourceType":"module"}