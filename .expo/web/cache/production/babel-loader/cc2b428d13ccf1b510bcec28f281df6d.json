{"ast":null,"code":"var TouchHistoryMath={centroidDimension:function centroidDimension(touchHistory,touchesChangedAfter,isXAxis,ofCurrent){var touchBank=touchHistory.touchBank;var total=0;var count=0;var oneTouchData=touchHistory.numberActiveTouches===1?touchHistory.touchBank[touchHistory.indexOfSingleActiveTouch]:null;if(oneTouchData!==null){if(oneTouchData.touchActive&&oneTouchData.currentTimeStamp>touchesChangedAfter){total+=ofCurrent&&isXAxis?oneTouchData.currentPageX:ofCurrent&&!isXAxis?oneTouchData.currentPageY:!ofCurrent&&isXAxis?oneTouchData.previousPageX:oneTouchData.previousPageY;count=1;}}else{for(var i=0;i<touchBank.length;i++){var touchTrack=touchBank[i];if(touchTrack!==null&&touchTrack!==undefined&&touchTrack.touchActive&&touchTrack.currentTimeStamp>=touchesChangedAfter){var toAdd=void 0;if(ofCurrent&&isXAxis){toAdd=touchTrack.currentPageX;}else if(ofCurrent&&!isXAxis){toAdd=touchTrack.currentPageY;}else if(!ofCurrent&&isXAxis){toAdd=touchTrack.previousPageX;}else{toAdd=touchTrack.previousPageY;}total+=toAdd;count++;}}}return count>0?total/count:TouchHistoryMath.noCentroid;},currentCentroidXOfTouchesChangedAfter:function currentCentroidXOfTouchesChangedAfter(touchHistory,touchesChangedAfter){return TouchHistoryMath.centroidDimension(touchHistory,touchesChangedAfter,true,true);},currentCentroidYOfTouchesChangedAfter:function currentCentroidYOfTouchesChangedAfter(touchHistory,touchesChangedAfter){return TouchHistoryMath.centroidDimension(touchHistory,touchesChangedAfter,false,true);},previousCentroidXOfTouchesChangedAfter:function previousCentroidXOfTouchesChangedAfter(touchHistory,touchesChangedAfter){return TouchHistoryMath.centroidDimension(touchHistory,touchesChangedAfter,true,false);},previousCentroidYOfTouchesChangedAfter:function previousCentroidYOfTouchesChangedAfter(touchHistory,touchesChangedAfter){return TouchHistoryMath.centroidDimension(touchHistory,touchesChangedAfter,false,false);},currentCentroidX:function currentCentroidX(touchHistory){return TouchHistoryMath.centroidDimension(touchHistory,0,true,true);},currentCentroidY:function currentCentroidY(touchHistory){return TouchHistoryMath.centroidDimension(touchHistory,0,false,true);},noCentroid:-1};export default TouchHistoryMath;","map":{"version":3,"sources":["C:/Users/arnol/code/entroprise/node_modules/react-web-gifted-chat/node_modules/react-native-web/dist/vendor/react-native/TouchHistoryMath/index.js"],"names":["TouchHistoryMath","centroidDimension","touchHistory","touchesChangedAfter","isXAxis","ofCurrent","touchBank","total","count","oneTouchData","numberActiveTouches","indexOfSingleActiveTouch","touchActive","currentTimeStamp","currentPageX","currentPageY","previousPageX","previousPageY","i","length","touchTrack","undefined","toAdd","noCentroid","currentCentroidXOfTouchesChangedAfter","currentCentroidYOfTouchesChangedAfter","previousCentroidXOfTouchesChangedAfter","previousCentroidYOfTouchesChangedAfter","currentCentroidX","currentCentroidY"],"mappings":"AAAA,GAAIA,CAAAA,gBAAgB,CAAG,CAiBrBC,iBAAiB,CAAE,QAASA,CAAAA,iBAAT,CAA2BC,YAA3B,CAAyCC,mBAAzC,CAA8DC,OAA9D,CAAuEC,SAAvE,CAAkF,CACnG,GAAIC,CAAAA,SAAS,CAAGJ,YAAY,CAACI,SAA7B,CACA,GAAIC,CAAAA,KAAK,CAAG,CAAZ,CACA,GAAIC,CAAAA,KAAK,CAAG,CAAZ,CAEA,GAAIC,CAAAA,YAAY,CAAGP,YAAY,CAACQ,mBAAb,GAAqC,CAArC,CAAyCR,YAAY,CAACI,SAAb,CAAuBJ,YAAY,CAACS,wBAApC,CAAzC,CAAyG,IAA5H,CAEA,GAAIF,YAAY,GAAK,IAArB,CAA2B,CACzB,GAAIA,YAAY,CAACG,WAAb,EAA4BH,YAAY,CAACI,gBAAb,CAAgCV,mBAAhE,CAAqF,CACnFI,KAAK,EAAIF,SAAS,EAAID,OAAb,CAAuBK,YAAY,CAACK,YAApC,CAAmDT,SAAS,EAAI,CAACD,OAAd,CAAwBK,YAAY,CAACM,YAArC,CAAoD,CAACV,SAAD,EAAcD,OAAd,CAAwBK,YAAY,CAACO,aAArC,CAAqDP,YAAY,CAACQ,aAAlL,CACAT,KAAK,CAAG,CAAR,CACD,CACF,CALD,IAKO,CACL,IAAK,GAAIU,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGZ,SAAS,CAACa,MAA9B,CAAsCD,CAAC,EAAvC,CAA2C,CACzC,GAAIE,CAAAA,UAAU,CAAGd,SAAS,CAACY,CAAD,CAA1B,CACA,GAAIE,UAAU,GAAK,IAAf,EAAuBA,UAAU,GAAKC,SAAtC,EAAmDD,UAAU,CAACR,WAA9D,EAA6EQ,UAAU,CAACP,gBAAX,EAA+BV,mBAAhH,CAAqI,CACnI,GAAImB,CAAAA,KAAK,CAAG,IAAK,EAAjB,CACA,GAAIjB,SAAS,EAAID,OAAjB,CAA0B,CACxBkB,KAAK,CAAGF,UAAU,CAACN,YAAnB,CACD,CAFD,IAEO,IAAIT,SAAS,EAAI,CAACD,OAAlB,CAA2B,CAChCkB,KAAK,CAAGF,UAAU,CAACL,YAAnB,CACD,CAFM,IAEA,IAAI,CAACV,SAAD,EAAcD,OAAlB,CAA2B,CAChCkB,KAAK,CAAGF,UAAU,CAACJ,aAAnB,CACD,CAFM,IAEA,CACLM,KAAK,CAAGF,UAAU,CAACH,aAAnB,CACD,CACDV,KAAK,EAAIe,KAAT,CACAd,KAAK,GACN,CACF,CACF,CACD,MAAOA,CAAAA,KAAK,CAAG,CAAR,CAAYD,KAAK,CAAGC,KAApB,CAA4BR,gBAAgB,CAACuB,UAApD,CACD,CAjDoB,CAmDrBC,qCAAqC,CAAE,QAASA,CAAAA,qCAAT,CAA+CtB,YAA/C,CAA6DC,mBAA7D,CAAkF,CACvH,MAAOH,CAAAA,gBAAgB,CAACC,iBAAjB,CAAmCC,YAAnC,CAAiDC,mBAAjD,CAAsE,IAAtE,CACP,IADO,CAAP,CAED,CAtDoB,CAwDrBsB,qCAAqC,CAAE,QAASA,CAAAA,qCAAT,CAA+CvB,YAA/C,CAA6DC,mBAA7D,CAAkF,CACvH,MAAOH,CAAAA,gBAAgB,CAACC,iBAAjB,CAAmCC,YAAnC,CAAiDC,mBAAjD,CAAsE,KAAtE,CACP,IADO,CAAP,CAED,CA3DoB,CA6DrBuB,sCAAsC,CAAE,QAASA,CAAAA,sCAAT,CAAgDxB,YAAhD,CAA8DC,mBAA9D,CAAmF,CACzH,MAAOH,CAAAA,gBAAgB,CAACC,iBAAjB,CAAmCC,YAAnC,CAAiDC,mBAAjD,CAAsE,IAAtE,CACP,KADO,CAAP,CAED,CAhEoB,CAkErBwB,sCAAsC,CAAE,QAASA,CAAAA,sCAAT,CAAgDzB,YAAhD,CAA8DC,mBAA9D,CAAmF,CACzH,MAAOH,CAAAA,gBAAgB,CAACC,iBAAjB,CAAmCC,YAAnC,CAAiDC,mBAAjD,CAAsE,KAAtE,CACP,KADO,CAAP,CAED,CArEoB,CAuErByB,gBAAgB,CAAE,QAASA,CAAAA,gBAAT,CAA0B1B,YAA1B,CAAwC,CACxD,MAAOF,CAAAA,gBAAgB,CAACC,iBAAjB,CAAmCC,YAAnC,CAAiD,CAAjD,CACP,IADO,CAEP,IAFO,CAAP,CAGD,CA3EoB,CA6ErB2B,gBAAgB,CAAE,QAASA,CAAAA,gBAAT,CAA0B3B,YAA1B,CAAwC,CACxD,MAAOF,CAAAA,gBAAgB,CAACC,iBAAjB,CAAmCC,YAAnC,CAAiD,CAAjD,CACP,KADO,CAEP,IAFO,CAAP,CAGD,CAjFoB,CAmFrBqB,UAAU,CAAE,CAAC,CAnFQ,CAAvB,CAsFA,cAAevB,CAAAA,gBAAf","sourcesContent":["var TouchHistoryMath = {\n  /**\n   * This code is optimized and not intended to look beautiful. This allows\n   * computing of touch centroids that have moved after `touchesChangedAfter`\n   * timeStamp. You can compute the current centroid involving all touches\n   * moves after `touchesChangedAfter`, or you can compute the previous\n   * centroid of all touches that were moved after `touchesChangedAfter`.\n   *\n   * @param {TouchHistoryMath} touchHistory Standard Responder touch track\n   * data.\n   * @param {number} touchesChangedAfter timeStamp after which moved touches\n   * are considered \"actively moving\" - not just \"active\".\n   * @param {boolean} isXAxis Consider `x` dimension vs. `y` dimension.\n   * @param {boolean} ofCurrent Compute current centroid for actively moving\n   * touches vs. previous centroid of now actively moving touches.\n   * @return {number} value of centroid in specified dimension.\n   */\n  centroidDimension: function centroidDimension(touchHistory, touchesChangedAfter, isXAxis, ofCurrent) {\n    var touchBank = touchHistory.touchBank;\n    var total = 0;\n    var count = 0;\n\n    var oneTouchData = touchHistory.numberActiveTouches === 1 ? touchHistory.touchBank[touchHistory.indexOfSingleActiveTouch] : null;\n\n    if (oneTouchData !== null) {\n      if (oneTouchData.touchActive && oneTouchData.currentTimeStamp > touchesChangedAfter) {\n        total += ofCurrent && isXAxis ? oneTouchData.currentPageX : ofCurrent && !isXAxis ? oneTouchData.currentPageY : !ofCurrent && isXAxis ? oneTouchData.previousPageX : oneTouchData.previousPageY;\n        count = 1;\n      }\n    } else {\n      for (var i = 0; i < touchBank.length; i++) {\n        var touchTrack = touchBank[i];\n        if (touchTrack !== null && touchTrack !== undefined && touchTrack.touchActive && touchTrack.currentTimeStamp >= touchesChangedAfter) {\n          var toAdd = void 0; // Yuck, program temporarily in invalid state.\n          if (ofCurrent && isXAxis) {\n            toAdd = touchTrack.currentPageX;\n          } else if (ofCurrent && !isXAxis) {\n            toAdd = touchTrack.currentPageY;\n          } else if (!ofCurrent && isXAxis) {\n            toAdd = touchTrack.previousPageX;\n          } else {\n            toAdd = touchTrack.previousPageY;\n          }\n          total += toAdd;\n          count++;\n        }\n      }\n    }\n    return count > 0 ? total / count : TouchHistoryMath.noCentroid;\n  },\n\n  currentCentroidXOfTouchesChangedAfter: function currentCentroidXOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {\n    return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, true, // isXAxis\n    true);\n  },\n\n  currentCentroidYOfTouchesChangedAfter: function currentCentroidYOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {\n    return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, false, // isXAxis\n    true);\n  },\n\n  previousCentroidXOfTouchesChangedAfter: function previousCentroidXOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {\n    return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, true, // isXAxis\n    false);\n  },\n\n  previousCentroidYOfTouchesChangedAfter: function previousCentroidYOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {\n    return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, false, // isXAxis\n    false);\n  },\n\n  currentCentroidX: function currentCentroidX(touchHistory) {\n    return TouchHistoryMath.centroidDimension(touchHistory, 0, // touchesChangedAfter\n    true, // isXAxis\n    true);\n  },\n\n  currentCentroidY: function currentCentroidY(touchHistory) {\n    return TouchHistoryMath.centroidDimension(touchHistory, 0, // touchesChangedAfter\n    false, // isXAxis\n    true);\n  },\n\n  noCentroid: -1\n};\n\nexport default TouchHistoryMath;"]},"metadata":{},"sourceType":"module"}